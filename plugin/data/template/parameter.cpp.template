// Generated by `rewrite_dsp.py`.

#include "parameter.hpp"
#include "../../common/dsp/constants.hpp"

namespace Steinberg {
namespace Synth {

using namespace SomeDSP;

UIntScale<double> Scales::boolScale(1);
LinearScale<double> Scales::aftertouch(0.0, 127.0);
LinearScale<double> Scales::pitchBend(-8192.0, 8191.0);
LinearScale<double> Scales::modulationWheel(0.0, 127.0);

{% for scl in scales %}
  {%- if scl.type == "Linear" %}
    {{- scl.type }}Scale<double> Scales::{{ scl.label }}({{ scl.min }}, {{ scl.max }});
  {%- elif scl.type == "Log" %}
    {{- scl.type }}Scale<double> Scales::{{ scl.label }}({{ scl.min }}, {{ scl.max }}, 0.5, {{ (scl.min + scl.max) / 2 }});
  {%- elif scl.type == "Int" %}
    {{- scl.type }}Scale<double> Scales::{{ scl.label }}({{ scl.min }}, {{ scl.max }});
  {%- elif scl.type == "SPoly" %}
    {{- scl.type }}Scale<double> Scales::{{ scl.label }}({{ scl.min }}, {{ scl.max }}, 0.15);
  {%- else %}
    {#- #}// Invalid scale type in {{ scl.label }}
  {%- endif %}
{% endfor %}

} // namespace Synth
} // namespace Steinberg
