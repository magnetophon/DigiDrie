// Generated by generate_parameter_hpp.py

#pragma once

#include "../common/dsp/scale.hpp"
#include "../common/parameterinterface.hpp"
#include "../common/value.hpp"

#include <memory>
#include <string>
#include <vector>

#include <iostream>

#ifdef TEST_BUILD
static const uint32_t kParameterIsAutomable = 0x01;
static const uint32_t kParameterIsBoolean = 0x02;
static const uint32_t kParameterIsInteger = 0x04;
static const uint32_t kParameterIsLogarithmic = 0x08;
#endif

namespace ParameterID {
enum ID {
  bypass,
  pitchBend,

  global0x00Freefloatosc,
  global0x00Positivebendrange,
  global0x00Negativebendrange,
  global0x00Portaoff_auto_on,
  globalMasterphase,
  globalPortamento,
  globalStereoMainVectorAb_cdMacro1_4Macro1Ab_cd,
  globalStereoMainVectorAb_cdMacro1_4Macro2Ab_cd,
  globalStereoMainVectorAb_cdMacro1_4Macro3Ab_cd,
  globalStereoMainVectorAb_cdMacro1_4Macro4Ab_cd,
  globalStereoMainVectorAb_cdMacro5_8Macro5Ab_cd,
  globalStereoMainVectorAb_cdMacro5_8Macro6Ab_cd,
  globalStereoMainVectorAb_cdMacro5_8Macro7Ab_cd,
  globalStereoMainVectorAb_cdMacro5_8Macro8Ab_cd,
  globalStereoMainVectorAc_bdMacro1_4Macro1Ac_bd,
  globalStereoMainVectorAc_bdMacro1_4Macro2Ac_bd,
  globalStereoMainVectorAc_bdMacro1_4Macro3Ac_bd,
  globalStereoMainVectorAc_bdMacro1_4Macro4Ac_bd,
  globalStereoMainVectorAc_bdMacro5_8Macro5Ac_bd,
  globalStereoMainVectorAc_bdMacro5_8Macro6Ac_bd,
  globalStereoMainVectorAc_bdMacro5_8Macro7Ac_bd,
  globalStereoMainVectorAc_bdMacro5_8Macro8Ac_bd,
  globalStereoL_roffsetVectorAb_cdMacro1_4Macro1Ab_cd,
  globalStereoL_roffsetVectorAb_cdMacro1_4Macro2Ab_cd,
  globalStereoL_roffsetVectorAb_cdMacro1_4Macro3Ab_cd,
  globalStereoL_roffsetVectorAb_cdMacro1_4Macro4Ab_cd,
  globalStereoL_roffsetVectorAb_cdMacro5_8Macro5Ab_cd,
  globalStereoL_roffsetVectorAb_cdMacro5_8Macro6Ab_cd,
  globalStereoL_roffsetVectorAb_cdMacro5_8Macro7Ab_cd,
  globalStereoL_roffsetVectorAb_cdMacro5_8Macro8Ab_cd,
  globalStereoL_roffsetVectorAc_bdMacro1_4Macro1Ac_bd,
  globalStereoL_roffsetVectorAc_bdMacro1_4Macro2Ac_bd,
  globalStereoL_roffsetVectorAc_bdMacro1_4Macro3Ac_bd,
  globalStereoL_roffsetVectorAc_bdMacro1_4Macro4Ac_bd,
  globalStereoL_roffsetVectorAc_bdMacro5_8Macro5Ac_bd,
  globalStereoL_roffsetVectorAc_bdMacro5_8Macro6Ac_bd,
  globalStereoL_roffsetVectorAc_bdMacro5_8Macro7Ac_bd,
  globalStereoL_roffsetVectorAc_bdMacro5_8Macro8Ac_bd,
  filterStereoMainMixTweakMixSvfMacro1_4Macro1Level,
  filterStereoMainMixTweakMixSvfMacro1_4Macro2Level,
  filterStereoMainMixTweakMixSvfMacro1_4Macro3Level,
  filterStereoMainMixTweakMixSvfMacro1_4Macro4Level,
  filterStereoMainMixTweakMixSvfMacro5_8Macro5Level,
  filterStereoMainMixTweakMixSvfMacro5_8Macro6Level,
  filterStereoMainMixTweakMixSvfMacro5_8Macro7Level,
  filterStereoMainMixTweakMixSvfMacro5_8Macro8Level,
  filterStereoMainMixTweakMixMs20Macro1_4Macro1Level,
  filterStereoMainMixTweakMixMs20Macro1_4Macro2Level,
  filterStereoMainMixTweakMixMs20Macro1_4Macro3Level,
  filterStereoMainMixTweakMixMs20Macro1_4Macro4Level,
  filterStereoMainMixTweakMixMs20Macro5_8Macro5Level,
  filterStereoMainMixTweakMixMs20Macro5_8Macro6Level,
  filterStereoMainMixTweakMixMs20Macro5_8Macro7Level,
  filterStereoMainMixTweakMixMs20Macro5_8Macro8Level,
  filterStereoMainMixTweakMixOberheimMacro1_4Macro1Level,
  filterStereoMainMixTweakMixOberheimMacro1_4Macro2Level,
  filterStereoMainMixTweakMixOberheimMacro1_4Macro3Level,
  filterStereoMainMixTweakMixOberheimMacro1_4Macro4Level,
  filterStereoMainMixTweakMixOberheimMacro5_8Macro5Level,
  filterStereoMainMixTweakMixOberheimMacro5_8Macro6Level,
  filterStereoMainMixTweakMixOberheimMacro5_8Macro7Level,
  filterStereoMainMixTweakMixOberheimMacro5_8Macro8Level,
  filterStereoMainMixTweakTweakFreqMacro1_4Macro1Normfreq,
  filterStereoMainMixTweakTweakFreqMacro1_4Macro2Normfreq,
  filterStereoMainMixTweakTweakFreqMacro1_4Macro3Normfreq,
  filterStereoMainMixTweakTweakFreqMacro1_4Macro4Normfreq,
  filterStereoMainMixTweakTweakFreqMacro5_8Macro5Normfreq,
  filterStereoMainMixTweakTweakFreqMacro5_8Macro6Normfreq,
  filterStereoMainMixTweakTweakFreqMacro5_8Macro7Normfreq,
  filterStereoMainMixTweakTweakFreqMacro5_8Macro8Normfreq,
  filterStereoMainMixTweakTweakQMacro1_4Macro1Q,
  filterStereoMainMixTweakTweakQMacro1_4Macro2Q,
  filterStereoMainMixTweakTweakQMacro1_4Macro3Q,
  filterStereoMainMixTweakTweakQMacro1_4Macro4Q,
  filterStereoMainMixTweakTweakQMacro5_8Macro5Q,
  filterStereoMainMixTweakTweakQMacro5_8Macro6Q,
  filterStereoMainMixTweakTweakQMacro5_8Macro7Q,
  filterStereoMainMixTweakTweakQMacro5_8Macro8Q,
  filterStereoL_roffsetMixTweakMixSvfMacro1_4Macro1Level,
  filterStereoL_roffsetMixTweakMixSvfMacro1_4Macro2Level,
  filterStereoL_roffsetMixTweakMixSvfMacro1_4Macro3Level,
  filterStereoL_roffsetMixTweakMixSvfMacro1_4Macro4Level,
  filterStereoL_roffsetMixTweakMixSvfMacro5_8Macro5Level,
  filterStereoL_roffsetMixTweakMixSvfMacro5_8Macro6Level,
  filterStereoL_roffsetMixTweakMixSvfMacro5_8Macro7Level,
  filterStereoL_roffsetMixTweakMixSvfMacro5_8Macro8Level,
  filterStereoL_roffsetMixTweakMixMs20Macro1_4Macro1Level,
  filterStereoL_roffsetMixTweakMixMs20Macro1_4Macro2Level,
  filterStereoL_roffsetMixTweakMixMs20Macro1_4Macro3Level,
  filterStereoL_roffsetMixTweakMixMs20Macro1_4Macro4Level,
  filterStereoL_roffsetMixTweakMixMs20Macro5_8Macro5Level,
  filterStereoL_roffsetMixTweakMixMs20Macro5_8Macro6Level,
  filterStereoL_roffsetMixTweakMixMs20Macro5_8Macro7Level,
  filterStereoL_roffsetMixTweakMixMs20Macro5_8Macro8Level,
  filterStereoL_roffsetMixTweakMixOberheimMacro1_4Macro1Level,
  filterStereoL_roffsetMixTweakMixOberheimMacro1_4Macro2Level,
  filterStereoL_roffsetMixTweakMixOberheimMacro1_4Macro3Level,
  filterStereoL_roffsetMixTweakMixOberheimMacro1_4Macro4Level,
  filterStereoL_roffsetMixTweakMixOberheimMacro5_8Macro5Level,
  filterStereoL_roffsetMixTweakMixOberheimMacro5_8Macro6Level,
  filterStereoL_roffsetMixTweakMixOberheimMacro5_8Macro7Level,
  filterStereoL_roffsetMixTweakMixOberheimMacro5_8Macro8Level,
  filterStereoL_roffsetMixTweakTweakFreqMacro1_4Macro1Normfreq,
  filterStereoL_roffsetMixTweakTweakFreqMacro1_4Macro2Normfreq,
  filterStereoL_roffsetMixTweakTweakFreqMacro1_4Macro3Normfreq,
  filterStereoL_roffsetMixTweakTweakFreqMacro1_4Macro4Normfreq,
  filterStereoL_roffsetMixTweakTweakFreqMacro5_8Macro5Normfreq,
  filterStereoL_roffsetMixTweakTweakFreqMacro5_8Macro6Normfreq,
  filterStereoL_roffsetMixTweakTweakFreqMacro5_8Macro7Normfreq,
  filterStereoL_roffsetMixTweakTweakFreqMacro5_8Macro8Normfreq,
  filterStereoL_roffsetMixTweakTweakQMacro1_4Macro1Q,
  filterStereoL_roffsetMixTweakTweakQMacro1_4Macro2Q,
  filterStereoL_roffsetMixTweakTweakQMacro1_4Macro3Q,
  filterStereoL_roffsetMixTweakTweakQMacro1_4Macro4Q,
  filterStereoL_roffsetMixTweakTweakQMacro5_8Macro5Q,
  filterStereoL_roffsetMixTweakTweakQMacro5_8Macro6Q,
  filterStereoL_roffsetMixTweakTweakQMacro5_8Macro7Q,
  filterStereoL_roffsetMixTweakTweakQMacro5_8Macro8Q,
  aStereoMainCzPmCzIndexMacro1_4Macro1Index,
  aStereoMainCzPmCzIndexMacro1_4Macro2Index,
  aStereoMainCzPmCzIndexMacro1_4Macro3Index,
  aStereoMainCzPmCzIndexMacro1_4Macro4Index,
  aStereoMainCzPmCzIndexMacro5_8Macro5Index,
  aStereoMainCzPmCzIndexMacro5_8Macro6Index,
  aStereoMainCzPmCzIndexMacro5_8Macro7Index,
  aStereoMainCzPmCzIndexMacro5_8Macro8Index,
  aStereoMainCzPmCzOctaveMacro1_4Macro1Octave,
  aStereoMainCzPmCzOctaveMacro1_4Macro2Octave,
  aStereoMainCzPmCzOctaveMacro1_4Macro3Octave,
  aStereoMainCzPmCzOctaveMacro1_4Macro4Octave,
  aStereoMainCzPmCzOctaveMacro5_8Macro5Octave,
  aStereoMainCzPmCzOctaveMacro5_8Macro6Octave,
  aStereoMainCzPmCzOctaveMacro5_8Macro7Octave,
  aStereoMainCzPmCzOctaveMacro5_8Macro8Octave,
  aStereoMainCzPmCzPhaseMacro1_4Macro1Phase,
  aStereoMainCzPmCzPhaseMacro1_4Macro2Phase,
  aStereoMainCzPmCzPhaseMacro1_4Macro3Phase,
  aStereoMainCzPmCzPhaseMacro1_4Macro4Phase,
  aStereoMainCzPmCzPhaseMacro5_8Macro5Phase,
  aStereoMainCzPmCzPhaseMacro5_8Macro6Phase,
  aStereoMainCzPmCzPhaseMacro5_8Macro7Phase,
  aStereoMainCzPmCzPhaseMacro5_8Macro8Phase,
  aStereoMainCzPmPmPmaMacro1_4Macro1Pma,
  aStereoMainCzPmPmPmaMacro1_4Macro2Pma,
  aStereoMainCzPmPmPmaMacro1_4Macro3Pma,
  aStereoMainCzPmPmPmaMacro1_4Macro4Pma,
  aStereoMainCzPmPmPmaMacro5_8Macro5Pma,
  aStereoMainCzPmPmPmaMacro5_8Macro6Pma,
  aStereoMainCzPmPmPmaMacro5_8Macro7Pma,
  aStereoMainCzPmPmPmaMacro5_8Macro8Pma,
  aStereoMainCzPmPmPmbMacro1_4Macro1Pmb,
  aStereoMainCzPmPmPmbMacro1_4Macro2Pmb,
  aStereoMainCzPmPmPmbMacro1_4Macro3Pmb,
  aStereoMainCzPmPmPmbMacro1_4Macro4Pmb,
  aStereoMainCzPmPmPmbMacro5_8Macro5Pmb,
  aStereoMainCzPmPmPmbMacro5_8Macro6Pmb,
  aStereoMainCzPmPmPmbMacro5_8Macro7Pmb,
  aStereoMainCzPmPmPmbMacro5_8Macro8Pmb,
  aStereoMainCzPmPmPmcMacro1_4Macro1Pmc,
  aStereoMainCzPmPmPmcMacro1_4Macro2Pmc,
  aStereoMainCzPmPmPmcMacro1_4Macro3Pmc,
  aStereoMainCzPmPmPmcMacro1_4Macro4Pmc,
  aStereoMainCzPmPmPmcMacro5_8Macro5Pmc,
  aStereoMainCzPmPmPmcMacro5_8Macro6Pmc,
  aStereoMainCzPmPmPmcMacro5_8Macro7Pmc,
  aStereoMainCzPmPmPmcMacro5_8Macro8Pmc,
  aStereoMainCzPmPmPmdMacro1_4Macro1Pmd,
  aStereoMainCzPmPmPmdMacro1_4Macro2Pmd,
  aStereoMainCzPmPmPmdMacro1_4Macro3Pmd,
  aStereoMainCzPmPmPmdMacro1_4Macro4Pmd,
  aStereoMainCzPmPmPmdMacro5_8Macro5Pmd,
  aStereoMainCzPmPmPmdMacro5_8Macro6Pmd,
  aStereoMainCzPmPmPmdMacro5_8Macro7Pmd,
  aStereoMainCzPmPmPmdMacro5_8Macro8Pmd,
  aStereoL_roffsetCzPmCzIndexMacro1_4Macro1Index,
  aStereoL_roffsetCzPmCzIndexMacro1_4Macro2Index,
  aStereoL_roffsetCzPmCzIndexMacro1_4Macro3Index,
  aStereoL_roffsetCzPmCzIndexMacro1_4Macro4Index,
  aStereoL_roffsetCzPmCzIndexMacro5_8Macro5Index,
  aStereoL_roffsetCzPmCzIndexMacro5_8Macro6Index,
  aStereoL_roffsetCzPmCzIndexMacro5_8Macro7Index,
  aStereoL_roffsetCzPmCzIndexMacro5_8Macro8Index,
  aStereoL_roffsetCzPmCzOctaveMacro1_4Macro1Octave,
  aStereoL_roffsetCzPmCzOctaveMacro1_4Macro2Octave,
  aStereoL_roffsetCzPmCzOctaveMacro1_4Macro3Octave,
  aStereoL_roffsetCzPmCzOctaveMacro1_4Macro4Octave,
  aStereoL_roffsetCzPmCzOctaveMacro5_8Macro5Octave,
  aStereoL_roffsetCzPmCzOctaveMacro5_8Macro6Octave,
  aStereoL_roffsetCzPmCzOctaveMacro5_8Macro7Octave,
  aStereoL_roffsetCzPmCzOctaveMacro5_8Macro8Octave,
  aStereoL_roffsetCzPmCzPhaseMacro1_4Macro1Phase,
  aStereoL_roffsetCzPmCzPhaseMacro1_4Macro2Phase,
  aStereoL_roffsetCzPmCzPhaseMacro1_4Macro3Phase,
  aStereoL_roffsetCzPmCzPhaseMacro1_4Macro4Phase,
  aStereoL_roffsetCzPmCzPhaseMacro5_8Macro5Phase,
  aStereoL_roffsetCzPmCzPhaseMacro5_8Macro6Phase,
  aStereoL_roffsetCzPmCzPhaseMacro5_8Macro7Phase,
  aStereoL_roffsetCzPmCzPhaseMacro5_8Macro8Phase,
  aStereoL_roffsetCzPmPmPmaMacro1_4Macro1Pma,
  aStereoL_roffsetCzPmPmPmaMacro1_4Macro2Pma,
  aStereoL_roffsetCzPmPmPmaMacro1_4Macro3Pma,
  aStereoL_roffsetCzPmPmPmaMacro1_4Macro4Pma,
  aStereoL_roffsetCzPmPmPmaMacro5_8Macro5Pma,
  aStereoL_roffsetCzPmPmPmaMacro5_8Macro6Pma,
  aStereoL_roffsetCzPmPmPmaMacro5_8Macro7Pma,
  aStereoL_roffsetCzPmPmPmaMacro5_8Macro8Pma,
  aStereoL_roffsetCzPmPmPmbMacro1_4Macro1Pmb,
  aStereoL_roffsetCzPmPmPmbMacro1_4Macro2Pmb,
  aStereoL_roffsetCzPmPmPmbMacro1_4Macro3Pmb,
  aStereoL_roffsetCzPmPmPmbMacro1_4Macro4Pmb,
  aStereoL_roffsetCzPmPmPmbMacro5_8Macro5Pmb,
  aStereoL_roffsetCzPmPmPmbMacro5_8Macro6Pmb,
  aStereoL_roffsetCzPmPmPmbMacro5_8Macro7Pmb,
  aStereoL_roffsetCzPmPmPmbMacro5_8Macro8Pmb,
  aStereoL_roffsetCzPmPmPmcMacro1_4Macro1Pmc,
  aStereoL_roffsetCzPmPmPmcMacro1_4Macro2Pmc,
  aStereoL_roffsetCzPmPmPmcMacro1_4Macro3Pmc,
  aStereoL_roffsetCzPmPmPmcMacro1_4Macro4Pmc,
  aStereoL_roffsetCzPmPmPmcMacro5_8Macro5Pmc,
  aStereoL_roffsetCzPmPmPmcMacro5_8Macro6Pmc,
  aStereoL_roffsetCzPmPmPmcMacro5_8Macro7Pmc,
  aStereoL_roffsetCzPmPmPmcMacro5_8Macro8Pmc,
  aStereoL_roffsetCzPmPmPmdMacro1_4Macro1Pmd,
  aStereoL_roffsetCzPmPmPmdMacro1_4Macro2Pmd,
  aStereoL_roffsetCzPmPmPmdMacro1_4Macro3Pmd,
  aStereoL_roffsetCzPmPmPmdMacro1_4Macro4Pmd,
  aStereoL_roffsetCzPmPmPmdMacro5_8Macro5Pmd,
  aStereoL_roffsetCzPmPmPmdMacro5_8Macro6Pmd,
  aStereoL_roffsetCzPmPmPmdMacro5_8Macro7Pmd,
  aStereoL_roffsetCzPmPmPmdMacro5_8Macro8Pmd,
  aType,
  bStereoMainCzPmCzIndexMacro1_4Macro1Index,
  bStereoMainCzPmCzIndexMacro1_4Macro2Index,
  bStereoMainCzPmCzIndexMacro1_4Macro3Index,
  bStereoMainCzPmCzIndexMacro1_4Macro4Index,
  bStereoMainCzPmCzIndexMacro5_8Macro5Index,
  bStereoMainCzPmCzIndexMacro5_8Macro6Index,
  bStereoMainCzPmCzIndexMacro5_8Macro7Index,
  bStereoMainCzPmCzIndexMacro5_8Macro8Index,
  bStereoMainCzPmCzOctaveMacro1_4Macro1Octave,
  bStereoMainCzPmCzOctaveMacro1_4Macro2Octave,
  bStereoMainCzPmCzOctaveMacro1_4Macro3Octave,
  bStereoMainCzPmCzOctaveMacro1_4Macro4Octave,
  bStereoMainCzPmCzOctaveMacro5_8Macro5Octave,
  bStereoMainCzPmCzOctaveMacro5_8Macro6Octave,
  bStereoMainCzPmCzOctaveMacro5_8Macro7Octave,
  bStereoMainCzPmCzOctaveMacro5_8Macro8Octave,
  bStereoMainCzPmCzPhaseMacro1_4Macro1Phase,
  bStereoMainCzPmCzPhaseMacro1_4Macro2Phase,
  bStereoMainCzPmCzPhaseMacro1_4Macro3Phase,
  bStereoMainCzPmCzPhaseMacro1_4Macro4Phase,
  bStereoMainCzPmCzPhaseMacro5_8Macro5Phase,
  bStereoMainCzPmCzPhaseMacro5_8Macro6Phase,
  bStereoMainCzPmCzPhaseMacro5_8Macro7Phase,
  bStereoMainCzPmCzPhaseMacro5_8Macro8Phase,
  bStereoMainCzPmPmPmaMacro1_4Macro1Pma,
  bStereoMainCzPmPmPmaMacro1_4Macro2Pma,
  bStereoMainCzPmPmPmaMacro1_4Macro3Pma,
  bStereoMainCzPmPmPmaMacro1_4Macro4Pma,
  bStereoMainCzPmPmPmaMacro5_8Macro5Pma,
  bStereoMainCzPmPmPmaMacro5_8Macro6Pma,
  bStereoMainCzPmPmPmaMacro5_8Macro7Pma,
  bStereoMainCzPmPmPmaMacro5_8Macro8Pma,
  bStereoMainCzPmPmPmbMacro1_4Macro1Pmb,
  bStereoMainCzPmPmPmbMacro1_4Macro2Pmb,
  bStereoMainCzPmPmPmbMacro1_4Macro3Pmb,
  bStereoMainCzPmPmPmbMacro1_4Macro4Pmb,
  bStereoMainCzPmPmPmbMacro5_8Macro5Pmb,
  bStereoMainCzPmPmPmbMacro5_8Macro6Pmb,
  bStereoMainCzPmPmPmbMacro5_8Macro7Pmb,
  bStereoMainCzPmPmPmbMacro5_8Macro8Pmb,
  bStereoMainCzPmPmPmcMacro1_4Macro1Pmc,
  bStereoMainCzPmPmPmcMacro1_4Macro2Pmc,
  bStereoMainCzPmPmPmcMacro1_4Macro3Pmc,
  bStereoMainCzPmPmPmcMacro1_4Macro4Pmc,
  bStereoMainCzPmPmPmcMacro5_8Macro5Pmc,
  bStereoMainCzPmPmPmcMacro5_8Macro6Pmc,
  bStereoMainCzPmPmPmcMacro5_8Macro7Pmc,
  bStereoMainCzPmPmPmcMacro5_8Macro8Pmc,
  bStereoMainCzPmPmPmdMacro1_4Macro1Pmd,
  bStereoMainCzPmPmPmdMacro1_4Macro2Pmd,
  bStereoMainCzPmPmPmdMacro1_4Macro3Pmd,
  bStereoMainCzPmPmPmdMacro1_4Macro4Pmd,
  bStereoMainCzPmPmPmdMacro5_8Macro5Pmd,
  bStereoMainCzPmPmPmdMacro5_8Macro6Pmd,
  bStereoMainCzPmPmPmdMacro5_8Macro7Pmd,
  bStereoMainCzPmPmPmdMacro5_8Macro8Pmd,
  bStereoL_roffsetCzPmCzIndexMacro1_4Macro1Index,
  bStereoL_roffsetCzPmCzIndexMacro1_4Macro2Index,
  bStereoL_roffsetCzPmCzIndexMacro1_4Macro3Index,
  bStereoL_roffsetCzPmCzIndexMacro1_4Macro4Index,
  bStereoL_roffsetCzPmCzIndexMacro5_8Macro5Index,
  bStereoL_roffsetCzPmCzIndexMacro5_8Macro6Index,
  bStereoL_roffsetCzPmCzIndexMacro5_8Macro7Index,
  bStereoL_roffsetCzPmCzIndexMacro5_8Macro8Index,
  bStereoL_roffsetCzPmCzOctaveMacro1_4Macro1Octave,
  bStereoL_roffsetCzPmCzOctaveMacro1_4Macro2Octave,
  bStereoL_roffsetCzPmCzOctaveMacro1_4Macro3Octave,
  bStereoL_roffsetCzPmCzOctaveMacro1_4Macro4Octave,
  bStereoL_roffsetCzPmCzOctaveMacro5_8Macro5Octave,
  bStereoL_roffsetCzPmCzOctaveMacro5_8Macro6Octave,
  bStereoL_roffsetCzPmCzOctaveMacro5_8Macro7Octave,
  bStereoL_roffsetCzPmCzOctaveMacro5_8Macro8Octave,
  bStereoL_roffsetCzPmCzPhaseMacro1_4Macro1Phase,
  bStereoL_roffsetCzPmCzPhaseMacro1_4Macro2Phase,
  bStereoL_roffsetCzPmCzPhaseMacro1_4Macro3Phase,
  bStereoL_roffsetCzPmCzPhaseMacro1_4Macro4Phase,
  bStereoL_roffsetCzPmCzPhaseMacro5_8Macro5Phase,
  bStereoL_roffsetCzPmCzPhaseMacro5_8Macro6Phase,
  bStereoL_roffsetCzPmCzPhaseMacro5_8Macro7Phase,
  bStereoL_roffsetCzPmCzPhaseMacro5_8Macro8Phase,
  bStereoL_roffsetCzPmPmPmaMacro1_4Macro1Pma,
  bStereoL_roffsetCzPmPmPmaMacro1_4Macro2Pma,
  bStereoL_roffsetCzPmPmPmaMacro1_4Macro3Pma,
  bStereoL_roffsetCzPmPmPmaMacro1_4Macro4Pma,
  bStereoL_roffsetCzPmPmPmaMacro5_8Macro5Pma,
  bStereoL_roffsetCzPmPmPmaMacro5_8Macro6Pma,
  bStereoL_roffsetCzPmPmPmaMacro5_8Macro7Pma,
  bStereoL_roffsetCzPmPmPmaMacro5_8Macro8Pma,
  bStereoL_roffsetCzPmPmPmbMacro1_4Macro1Pmb,
  bStereoL_roffsetCzPmPmPmbMacro1_4Macro2Pmb,
  bStereoL_roffsetCzPmPmPmbMacro1_4Macro3Pmb,
  bStereoL_roffsetCzPmPmPmbMacro1_4Macro4Pmb,
  bStereoL_roffsetCzPmPmPmbMacro5_8Macro5Pmb,
  bStereoL_roffsetCzPmPmPmbMacro5_8Macro6Pmb,
  bStereoL_roffsetCzPmPmPmbMacro5_8Macro7Pmb,
  bStereoL_roffsetCzPmPmPmbMacro5_8Macro8Pmb,
  bStereoL_roffsetCzPmPmPmcMacro1_4Macro1Pmc,
  bStereoL_roffsetCzPmPmPmcMacro1_4Macro2Pmc,
  bStereoL_roffsetCzPmPmPmcMacro1_4Macro3Pmc,
  bStereoL_roffsetCzPmPmPmcMacro1_4Macro4Pmc,
  bStereoL_roffsetCzPmPmPmcMacro5_8Macro5Pmc,
  bStereoL_roffsetCzPmPmPmcMacro5_8Macro6Pmc,
  bStereoL_roffsetCzPmPmPmcMacro5_8Macro7Pmc,
  bStereoL_roffsetCzPmPmPmcMacro5_8Macro8Pmc,
  bStereoL_roffsetCzPmPmPmdMacro1_4Macro1Pmd,
  bStereoL_roffsetCzPmPmPmdMacro1_4Macro2Pmd,
  bStereoL_roffsetCzPmPmPmdMacro1_4Macro3Pmd,
  bStereoL_roffsetCzPmPmPmdMacro1_4Macro4Pmd,
  bStereoL_roffsetCzPmPmPmdMacro5_8Macro5Pmd,
  bStereoL_roffsetCzPmPmPmdMacro5_8Macro6Pmd,
  bStereoL_roffsetCzPmPmPmdMacro5_8Macro7Pmd,
  bStereoL_roffsetCzPmPmPmdMacro5_8Macro8Pmd,
  bType,
  cStereoMainCzPmCzIndexMacro1_4Macro1Index,
  cStereoMainCzPmCzIndexMacro1_4Macro2Index,
  cStereoMainCzPmCzIndexMacro1_4Macro3Index,
  cStereoMainCzPmCzIndexMacro1_4Macro4Index,
  cStereoMainCzPmCzIndexMacro5_8Macro5Index,
  cStereoMainCzPmCzIndexMacro5_8Macro6Index,
  cStereoMainCzPmCzIndexMacro5_8Macro7Index,
  cStereoMainCzPmCzIndexMacro5_8Macro8Index,
  cStereoMainCzPmCzOctaveMacro1_4Macro1Octave,
  cStereoMainCzPmCzOctaveMacro1_4Macro2Octave,
  cStereoMainCzPmCzOctaveMacro1_4Macro3Octave,
  cStereoMainCzPmCzOctaveMacro1_4Macro4Octave,
  cStereoMainCzPmCzOctaveMacro5_8Macro5Octave,
  cStereoMainCzPmCzOctaveMacro5_8Macro6Octave,
  cStereoMainCzPmCzOctaveMacro5_8Macro7Octave,
  cStereoMainCzPmCzOctaveMacro5_8Macro8Octave,
  cStereoMainCzPmCzPhaseMacro1_4Macro1Phase,
  cStereoMainCzPmCzPhaseMacro1_4Macro2Phase,
  cStereoMainCzPmCzPhaseMacro1_4Macro3Phase,
  cStereoMainCzPmCzPhaseMacro1_4Macro4Phase,
  cStereoMainCzPmCzPhaseMacro5_8Macro5Phase,
  cStereoMainCzPmCzPhaseMacro5_8Macro6Phase,
  cStereoMainCzPmCzPhaseMacro5_8Macro7Phase,
  cStereoMainCzPmCzPhaseMacro5_8Macro8Phase,
  cStereoMainCzPmPmPmaMacro1_4Macro1Pma,
  cStereoMainCzPmPmPmaMacro1_4Macro2Pma,
  cStereoMainCzPmPmPmaMacro1_4Macro3Pma,
  cStereoMainCzPmPmPmaMacro1_4Macro4Pma,
  cStereoMainCzPmPmPmaMacro5_8Macro5Pma,
  cStereoMainCzPmPmPmaMacro5_8Macro6Pma,
  cStereoMainCzPmPmPmaMacro5_8Macro7Pma,
  cStereoMainCzPmPmPmaMacro5_8Macro8Pma,
  cStereoMainCzPmPmPmbMacro1_4Macro1Pmb,
  cStereoMainCzPmPmPmbMacro1_4Macro2Pmb,
  cStereoMainCzPmPmPmbMacro1_4Macro3Pmb,
  cStereoMainCzPmPmPmbMacro1_4Macro4Pmb,
  cStereoMainCzPmPmPmbMacro5_8Macro5Pmb,
  cStereoMainCzPmPmPmbMacro5_8Macro6Pmb,
  cStereoMainCzPmPmPmbMacro5_8Macro7Pmb,
  cStereoMainCzPmPmPmbMacro5_8Macro8Pmb,
  cStereoMainCzPmPmPmcMacro1_4Macro1Pmc,
  cStereoMainCzPmPmPmcMacro1_4Macro2Pmc,
  cStereoMainCzPmPmPmcMacro1_4Macro3Pmc,
  cStereoMainCzPmPmPmcMacro1_4Macro4Pmc,
  cStereoMainCzPmPmPmcMacro5_8Macro5Pmc,
  cStereoMainCzPmPmPmcMacro5_8Macro6Pmc,
  cStereoMainCzPmPmPmcMacro5_8Macro7Pmc,
  cStereoMainCzPmPmPmcMacro5_8Macro8Pmc,
  cStereoMainCzPmPmPmdMacro1_4Macro1Pmd,
  cStereoMainCzPmPmPmdMacro1_4Macro2Pmd,
  cStereoMainCzPmPmPmdMacro1_4Macro3Pmd,
  cStereoMainCzPmPmPmdMacro1_4Macro4Pmd,
  cStereoMainCzPmPmPmdMacro5_8Macro5Pmd,
  cStereoMainCzPmPmPmdMacro5_8Macro6Pmd,
  cStereoMainCzPmPmPmdMacro5_8Macro7Pmd,
  cStereoMainCzPmPmPmdMacro5_8Macro8Pmd,
  cStereoL_roffsetCzPmCzIndexMacro1_4Macro1Index,
  cStereoL_roffsetCzPmCzIndexMacro1_4Macro2Index,
  cStereoL_roffsetCzPmCzIndexMacro1_4Macro3Index,
  cStereoL_roffsetCzPmCzIndexMacro1_4Macro4Index,
  cStereoL_roffsetCzPmCzIndexMacro5_8Macro5Index,
  cStereoL_roffsetCzPmCzIndexMacro5_8Macro6Index,
  cStereoL_roffsetCzPmCzIndexMacro5_8Macro7Index,
  cStereoL_roffsetCzPmCzIndexMacro5_8Macro8Index,
  cStereoL_roffsetCzPmCzOctaveMacro1_4Macro1Octave,
  cStereoL_roffsetCzPmCzOctaveMacro1_4Macro2Octave,
  cStereoL_roffsetCzPmCzOctaveMacro1_4Macro3Octave,
  cStereoL_roffsetCzPmCzOctaveMacro1_4Macro4Octave,
  cStereoL_roffsetCzPmCzOctaveMacro5_8Macro5Octave,
  cStereoL_roffsetCzPmCzOctaveMacro5_8Macro6Octave,
  cStereoL_roffsetCzPmCzOctaveMacro5_8Macro7Octave,
  cStereoL_roffsetCzPmCzOctaveMacro5_8Macro8Octave,
  cStereoL_roffsetCzPmCzPhaseMacro1_4Macro1Phase,
  cStereoL_roffsetCzPmCzPhaseMacro1_4Macro2Phase,
  cStereoL_roffsetCzPmCzPhaseMacro1_4Macro3Phase,
  cStereoL_roffsetCzPmCzPhaseMacro1_4Macro4Phase,
  cStereoL_roffsetCzPmCzPhaseMacro5_8Macro5Phase,
  cStereoL_roffsetCzPmCzPhaseMacro5_8Macro6Phase,
  cStereoL_roffsetCzPmCzPhaseMacro5_8Macro7Phase,
  cStereoL_roffsetCzPmCzPhaseMacro5_8Macro8Phase,
  cStereoL_roffsetCzPmPmPmaMacro1_4Macro1Pma,
  cStereoL_roffsetCzPmPmPmaMacro1_4Macro2Pma,
  cStereoL_roffsetCzPmPmPmaMacro1_4Macro3Pma,
  cStereoL_roffsetCzPmPmPmaMacro1_4Macro4Pma,
  cStereoL_roffsetCzPmPmPmaMacro5_8Macro5Pma,
  cStereoL_roffsetCzPmPmPmaMacro5_8Macro6Pma,
  cStereoL_roffsetCzPmPmPmaMacro5_8Macro7Pma,
  cStereoL_roffsetCzPmPmPmaMacro5_8Macro8Pma,
  cStereoL_roffsetCzPmPmPmbMacro1_4Macro1Pmb,
  cStereoL_roffsetCzPmPmPmbMacro1_4Macro2Pmb,
  cStereoL_roffsetCzPmPmPmbMacro1_4Macro3Pmb,
  cStereoL_roffsetCzPmPmPmbMacro1_4Macro4Pmb,
  cStereoL_roffsetCzPmPmPmbMacro5_8Macro5Pmb,
  cStereoL_roffsetCzPmPmPmbMacro5_8Macro6Pmb,
  cStereoL_roffsetCzPmPmPmbMacro5_8Macro7Pmb,
  cStereoL_roffsetCzPmPmPmbMacro5_8Macro8Pmb,
  cStereoL_roffsetCzPmPmPmcMacro1_4Macro1Pmc,
  cStereoL_roffsetCzPmPmPmcMacro1_4Macro2Pmc,
  cStereoL_roffsetCzPmPmPmcMacro1_4Macro3Pmc,
  cStereoL_roffsetCzPmPmPmcMacro1_4Macro4Pmc,
  cStereoL_roffsetCzPmPmPmcMacro5_8Macro5Pmc,
  cStereoL_roffsetCzPmPmPmcMacro5_8Macro6Pmc,
  cStereoL_roffsetCzPmPmPmcMacro5_8Macro7Pmc,
  cStereoL_roffsetCzPmPmPmcMacro5_8Macro8Pmc,
  cStereoL_roffsetCzPmPmPmdMacro1_4Macro1Pmd,
  cStereoL_roffsetCzPmPmPmdMacro1_4Macro2Pmd,
  cStereoL_roffsetCzPmPmPmdMacro1_4Macro3Pmd,
  cStereoL_roffsetCzPmPmPmdMacro1_4Macro4Pmd,
  cStereoL_roffsetCzPmPmPmdMacro5_8Macro5Pmd,
  cStereoL_roffsetCzPmPmPmdMacro5_8Macro6Pmd,
  cStereoL_roffsetCzPmPmPmdMacro5_8Macro7Pmd,
  cStereoL_roffsetCzPmPmPmdMacro5_8Macro8Pmd,
  cType,
  dStereoMainCzPmCzIndexMacro1_4Macro1Index,
  dStereoMainCzPmCzIndexMacro1_4Macro2Index,
  dStereoMainCzPmCzIndexMacro1_4Macro3Index,
  dStereoMainCzPmCzIndexMacro1_4Macro4Index,
  dStereoMainCzPmCzIndexMacro5_8Macro5Index,
  dStereoMainCzPmCzIndexMacro5_8Macro6Index,
  dStereoMainCzPmCzIndexMacro5_8Macro7Index,
  dStereoMainCzPmCzIndexMacro5_8Macro8Index,
  dStereoMainCzPmCzOctaveMacro1_4Macro1Octave,
  dStereoMainCzPmCzOctaveMacro1_4Macro2Octave,
  dStereoMainCzPmCzOctaveMacro1_4Macro3Octave,
  dStereoMainCzPmCzOctaveMacro1_4Macro4Octave,
  dStereoMainCzPmCzOctaveMacro5_8Macro5Octave,
  dStereoMainCzPmCzOctaveMacro5_8Macro6Octave,
  dStereoMainCzPmCzOctaveMacro5_8Macro7Octave,
  dStereoMainCzPmCzOctaveMacro5_8Macro8Octave,
  dStereoMainCzPmCzPhaseMacro1_4Macro1Phase,
  dStereoMainCzPmCzPhaseMacro1_4Macro2Phase,
  dStereoMainCzPmCzPhaseMacro1_4Macro3Phase,
  dStereoMainCzPmCzPhaseMacro1_4Macro4Phase,
  dStereoMainCzPmCzPhaseMacro5_8Macro5Phase,
  dStereoMainCzPmCzPhaseMacro5_8Macro6Phase,
  dStereoMainCzPmCzPhaseMacro5_8Macro7Phase,
  dStereoMainCzPmCzPhaseMacro5_8Macro8Phase,
  dStereoMainCzPmPmPmaMacro1_4Macro1Pma,
  dStereoMainCzPmPmPmaMacro1_4Macro2Pma,
  dStereoMainCzPmPmPmaMacro1_4Macro3Pma,
  dStereoMainCzPmPmPmaMacro1_4Macro4Pma,
  dStereoMainCzPmPmPmaMacro5_8Macro5Pma,
  dStereoMainCzPmPmPmaMacro5_8Macro6Pma,
  dStereoMainCzPmPmPmaMacro5_8Macro7Pma,
  dStereoMainCzPmPmPmaMacro5_8Macro8Pma,
  dStereoMainCzPmPmPmbMacro1_4Macro1Pmb,
  dStereoMainCzPmPmPmbMacro1_4Macro2Pmb,
  dStereoMainCzPmPmPmbMacro1_4Macro3Pmb,
  dStereoMainCzPmPmPmbMacro1_4Macro4Pmb,
  dStereoMainCzPmPmPmbMacro5_8Macro5Pmb,
  dStereoMainCzPmPmPmbMacro5_8Macro6Pmb,
  dStereoMainCzPmPmPmbMacro5_8Macro7Pmb,
  dStereoMainCzPmPmPmbMacro5_8Macro8Pmb,
  dStereoMainCzPmPmPmcMacro1_4Macro1Pmc,
  dStereoMainCzPmPmPmcMacro1_4Macro2Pmc,
  dStereoMainCzPmPmPmcMacro1_4Macro3Pmc,
  dStereoMainCzPmPmPmcMacro1_4Macro4Pmc,
  dStereoMainCzPmPmPmcMacro5_8Macro5Pmc,
  dStereoMainCzPmPmPmcMacro5_8Macro6Pmc,
  dStereoMainCzPmPmPmcMacro5_8Macro7Pmc,
  dStereoMainCzPmPmPmcMacro5_8Macro8Pmc,
  dStereoMainCzPmPmPmdMacro1_4Macro1Pmd,
  dStereoMainCzPmPmPmdMacro1_4Macro2Pmd,
  dStereoMainCzPmPmPmdMacro1_4Macro3Pmd,
  dStereoMainCzPmPmPmdMacro1_4Macro4Pmd,
  dStereoMainCzPmPmPmdMacro5_8Macro5Pmd,
  dStereoMainCzPmPmPmdMacro5_8Macro6Pmd,
  dStereoMainCzPmPmPmdMacro5_8Macro7Pmd,
  dStereoMainCzPmPmPmdMacro5_8Macro8Pmd,
  dStereoL_roffsetCzPmCzIndexMacro1_4Macro1Index,
  dStereoL_roffsetCzPmCzIndexMacro1_4Macro2Index,
  dStereoL_roffsetCzPmCzIndexMacro1_4Macro3Index,
  dStereoL_roffsetCzPmCzIndexMacro1_4Macro4Index,
  dStereoL_roffsetCzPmCzIndexMacro5_8Macro5Index,
  dStereoL_roffsetCzPmCzIndexMacro5_8Macro6Index,
  dStereoL_roffsetCzPmCzIndexMacro5_8Macro7Index,
  dStereoL_roffsetCzPmCzIndexMacro5_8Macro8Index,
  dStereoL_roffsetCzPmCzOctaveMacro1_4Macro1Octave,
  dStereoL_roffsetCzPmCzOctaveMacro1_4Macro2Octave,
  dStereoL_roffsetCzPmCzOctaveMacro1_4Macro3Octave,
  dStereoL_roffsetCzPmCzOctaveMacro1_4Macro4Octave,
  dStereoL_roffsetCzPmCzOctaveMacro5_8Macro5Octave,
  dStereoL_roffsetCzPmCzOctaveMacro5_8Macro6Octave,
  dStereoL_roffsetCzPmCzOctaveMacro5_8Macro7Octave,
  dStereoL_roffsetCzPmCzOctaveMacro5_8Macro8Octave,
  dStereoL_roffsetCzPmCzPhaseMacro1_4Macro1Phase,
  dStereoL_roffsetCzPmCzPhaseMacro1_4Macro2Phase,
  dStereoL_roffsetCzPmCzPhaseMacro1_4Macro3Phase,
  dStereoL_roffsetCzPmCzPhaseMacro1_4Macro4Phase,
  dStereoL_roffsetCzPmCzPhaseMacro5_8Macro5Phase,
  dStereoL_roffsetCzPmCzPhaseMacro5_8Macro6Phase,
  dStereoL_roffsetCzPmCzPhaseMacro5_8Macro7Phase,
  dStereoL_roffsetCzPmCzPhaseMacro5_8Macro8Phase,
  dStereoL_roffsetCzPmPmPmaMacro1_4Macro1Pma,
  dStereoL_roffsetCzPmPmPmaMacro1_4Macro2Pma,
  dStereoL_roffsetCzPmPmPmaMacro1_4Macro3Pma,
  dStereoL_roffsetCzPmPmPmaMacro1_4Macro4Pma,
  dStereoL_roffsetCzPmPmPmaMacro5_8Macro5Pma,
  dStereoL_roffsetCzPmPmPmaMacro5_8Macro6Pma,
  dStereoL_roffsetCzPmPmPmaMacro5_8Macro7Pma,
  dStereoL_roffsetCzPmPmPmaMacro5_8Macro8Pma,
  dStereoL_roffsetCzPmPmPmbMacro1_4Macro1Pmb,
  dStereoL_roffsetCzPmPmPmbMacro1_4Macro2Pmb,
  dStereoL_roffsetCzPmPmPmbMacro1_4Macro3Pmb,
  dStereoL_roffsetCzPmPmPmbMacro1_4Macro4Pmb,
  dStereoL_roffsetCzPmPmPmbMacro5_8Macro5Pmb,
  dStereoL_roffsetCzPmPmPmbMacro5_8Macro6Pmb,
  dStereoL_roffsetCzPmPmPmbMacro5_8Macro7Pmb,
  dStereoL_roffsetCzPmPmPmbMacro5_8Macro8Pmb,
  dStereoL_roffsetCzPmPmPmcMacro1_4Macro1Pmc,
  dStereoL_roffsetCzPmPmPmcMacro1_4Macro2Pmc,
  dStereoL_roffsetCzPmPmPmcMacro1_4Macro3Pmc,
  dStereoL_roffsetCzPmPmPmcMacro1_4Macro4Pmc,
  dStereoL_roffsetCzPmPmPmcMacro5_8Macro5Pmc,
  dStereoL_roffsetCzPmPmPmcMacro5_8Macro6Pmc,
  dStereoL_roffsetCzPmPmPmcMacro5_8Macro7Pmc,
  dStereoL_roffsetCzPmPmPmcMacro5_8Macro8Pmc,
  dStereoL_roffsetCzPmPmPmdMacro1_4Macro1Pmd,
  dStereoL_roffsetCzPmPmPmdMacro1_4Macro2Pmd,
  dStereoL_roffsetCzPmPmPmdMacro1_4Macro3Pmd,
  dStereoL_roffsetCzPmPmPmdMacro1_4Macro4Pmd,
  dStereoL_roffsetCzPmPmPmdMacro5_8Macro5Pmd,
  dStereoL_roffsetCzPmPmPmdMacro5_8Macro6Pmd,
  dStereoL_roffsetCzPmPmPmdMacro5_8Macro7Pmd,
  dStereoL_roffsetCzPmPmPmdMacro5_8Macro8Pmd,
  dType,
  envelopesEnvelope_1Attack,
  envelopesEnvelope_1Decay,
  envelopesEnvelope_1Sustain,
  envelopesEnvelope_1Release,
  envelopesEnvelope_1Velsens,
  envelopesEnvelope_1Envelope_1,
  envelopesEnvelope0Attack,
  envelopesEnvelope0Decay,
  envelopesEnvelope0Sustain,
  envelopesEnvelope0Release,
  envelopesEnvelope0Velsens,
  envelopesEnvelope0Envelope0,
  envelopesEnvelope1Attack,
  envelopesEnvelope1Decay,
  envelopesEnvelope1Sustain,
  envelopesEnvelope1Release,
  envelopesEnvelope1Velsens,
  envelopesEnvelope1Envelope1,
  envelopesEnvelope2Attack,
  envelopesEnvelope2Decay,
  envelopesEnvelope2Sustain,
  envelopesEnvelope2Release,
  envelopesEnvelope2Velsens,
  envelopesEnvelope2Envelope2,
  envelopesEnvelope3Attack,
  envelopesEnvelope3Decay,
  envelopesEnvelope3Sustain,
  envelopesEnvelope3Release,
  envelopesEnvelope3Velsens,
  envelopesEnvelope3Envelope3,
  lfosLfo0Lfofreq,
  lfosLfo0Lfo0,
  lfosLfo1Lfofreq,
  lfosLfo1Lfo1,
  lfosLfo2Lfofreq,
  lfosLfo2Lfo2,
  lfosLfo3Lfofreq,
  lfosLfo3Lfo3,
  modulation1Macro,
  modulation1Uptime,
  modulation1Downtime,
  modulation1Env0,
  modulation1Env1,
  modulation1Env2,
  modulation1Env3,
  modulation1Lfo0,
  modulation1Lfo1,
  modulation1Lfo2,
  modulation1Lfo3,
  modulation1After_touch,
  modulation1Note,
  modulation1Velocity,
  modulation1Mod_wheel,
  modulation1Pitch_wheel,
  modulation1Random,
  modulation1Mix,
  modulation2Macro,
  modulation2Uptime,
  modulation2Downtime,
  modulation2Env0,
  modulation2Env1,
  modulation2Env2,
  modulation2Env3,
  modulation2Lfo0,
  modulation2Lfo1,
  modulation2Lfo2,
  modulation2Lfo3,
  modulation2After_touch,
  modulation2Note,
  modulation2Velocity,
  modulation2Mod_wheel,
  modulation2Pitch_wheel,
  modulation2Random,
  modulation2Mix,
  modulation3Macro,
  modulation3Uptime,
  modulation3Downtime,
  modulation3Env0,
  modulation3Env1,
  modulation3Env2,
  modulation3Env3,
  modulation3Lfo0,
  modulation3Lfo1,
  modulation3Lfo2,
  modulation3Lfo3,
  modulation3After_touch,
  modulation3Note,
  modulation3Velocity,
  modulation3Mod_wheel,
  modulation3Pitch_wheel,
  modulation3Random,
  modulation3Mix,
  midiChannelaftertouch,
  midiModwheel,
  midiPitchwheelvaluein,
  midiFreq,
  midiGain,
  midiGate,
  
  ID_ENUM_LENGTH,
};
} // namespace ParameterID

struct Scales {
  static SomeDSP::IntScale<double> boolScale;
  static SomeDSP::LinearScale<double> defaultScale;

  static SomeDSP::IntScale<double> freefloatosc;
  static SomeDSP::IntScale<double> positivebendrange;
  static SomeDSP::IntScale<double> negativebendrange;
  static SomeDSP::IntScale<double> portaoff_auto_on;
  static SomeDSP::LinearScale<double> masterphase;
  static SomeDSP::LogScale<double> portamento;
  static SomeDSP::LinearScale<double> ab_cd;
  static SomeDSP::LinearScale<double> ac_bd;
  static SomeDSP::LinearScale<double> level;
  static SomeDSP::LinearScale<double> normfreq;
  static SomeDSP::LinearScale<double> q;
  static SomeDSP::LinearScale<double> index;
  static SomeDSP::LinearScale<double> octave;
  static SomeDSP::LinearScale<double> phase;
  static SomeDSP::LogScale<double> pma;
  static SomeDSP::LogScale<double> pmb;
  static SomeDSP::LogScale<double> pmc;
  static SomeDSP::LogScale<double> pmd;
  static SomeDSP::IntScale<double> type;
  static SomeDSP::LogScale<double> attack;
  static SomeDSP::LogScale<double> decay;
  static SomeDSP::LinearScale<double> sustain;
  static SomeDSP::LogScale<double> release;
  static SomeDSP::LinearScale<double> velsens;
  static SomeDSP::LinearScale<double> envelope_1;
  static SomeDSP::LinearScale<double> envelope0;
  static SomeDSP::LinearScale<double> envelope1;
  static SomeDSP::LinearScale<double> envelope2;
  static SomeDSP::LinearScale<double> envelope3;
  static SomeDSP::LogScale<double> lfofreq;
  static SomeDSP::LinearScale<double> lfo0;
  static SomeDSP::LinearScale<double> lfo1;
  static SomeDSP::LinearScale<double> lfo2;
  static SomeDSP::LinearScale<double> lfo3;
  static SomeDSP::LinearScale<double> macro;
  static SomeDSP::LinearScale<double> uptime;
  static SomeDSP::LinearScale<double> downtime;
  static SomeDSP::LinearScale<double> env;
  static SomeDSP::LinearScale<double> lfo;
  static SomeDSP::LinearScale<double> after_touch;
  static SomeDSP::LinearScale<double> note;
  static SomeDSP::LinearScale<double> velocity;
  static SomeDSP::LinearScale<double> mod_wheel;
  static SomeDSP::LinearScale<double> pitch_wheel;
  static SomeDSP::LinearScale<double> random;
  static SomeDSP::LinearScale<double> mix;
  static SomeDSP::IntScale<double> channelaftertouch;
  static SomeDSP::IntScale<double> modwheel;
  static SomeDSP::IntScale<double> pitchwheelvaluein;
  static SomeDSP::LogScale<double> freq;
  static SomeDSP::LinearScale<double> gain;
  static SomeDSP::LinearScale<double> gate;
  
};

struct GlobalParameter : public ParameterInterface {
  std::vector<std::unique_ptr<ValueInterface>> value;

  GlobalParameter()
  {
    value.resize(ParameterID::ID_ENUM_LENGTH);

    using ID = ParameterID::ID;
    using LinearValue = FloatValue<SomeDSP::LinearScale<double>>;
    using LogValue = FloatValue<SomeDSP::LogScale<double>>;
    // using SPolyValue = FloatValue<SomeDSP::SPolyScale<double>>;
    // using DecibelValue = FloatValue<SomeDSP::DecibelScale<double>>;

    value[ID::bypass] = std::make_unique<IntValue>(
      0, Scales::boolScale, "bypass", kParameterIsAutomable | kParameterIsBoolean);
    value[ID::pitchBend] = std::make_unique<LinearValue>(
      0.5, Scales::defaultScale, "pitchBend", kParameterIsAutomable);

    value[ID::global0x00Freefloatosc] = std::make_unique<IntValue>(
      Scales::freefloatosc.invmap(0),
      Scales::freefloatosc,
      "global0x00Freefloatosc",
      0 | kParameterIsAutomable | kParameterIsInteger);
    value[ID::global0x00Positivebendrange] = std::make_unique<IntValue>(
      Scales::positivebendrange.invmap(12),
      Scales::positivebendrange,
      "global0x00Positivebendrange",
      0 | kParameterIsAutomable | kParameterIsInteger);
    value[ID::global0x00Negativebendrange] = std::make_unique<IntValue>(
      Scales::negativebendrange.invmap(-12),
      Scales::negativebendrange,
      "global0x00Negativebendrange",
      0 | kParameterIsAutomable | kParameterIsInteger);
    value[ID::global0x00Portaoff_auto_on] = std::make_unique<IntValue>(
      Scales::portaoff_auto_on.invmap(1),
      Scales::portaoff_auto_on,
      "global0x00Portaoff_auto_on",
      0 | kParameterIsAutomable | kParameterIsInteger);
    value[ID::globalMasterphase] = std::make_unique<LinearValue>(
      Scales::masterphase.invmap(0),
      Scales::masterphase,
      "globalMasterphase",
      0 | kParameterIsAutomable);
    value[ID::globalPortamento] = std::make_unique<LogValue>(
      Scales::portamento.invmap(0),
      Scales::portamento,
      "globalPortamento",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::globalStereoMainVectorAb_cdMacro1_4Macro1Ab_cd] = std::make_unique<LinearValue>(
      Scales::ab_cd.invmap(0),
      Scales::ab_cd,
      "globalStereoMainVectorAb_cdMacro1_4Macro1Ab_cd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoMainVectorAb_cdMacro1_4Macro2Ab_cd] = std::make_unique<LinearValue>(
      Scales::ab_cd.invmap(0),
      Scales::ab_cd,
      "globalStereoMainVectorAb_cdMacro1_4Macro2Ab_cd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoMainVectorAb_cdMacro1_4Macro3Ab_cd] = std::make_unique<LinearValue>(
      Scales::ab_cd.invmap(0),
      Scales::ab_cd,
      "globalStereoMainVectorAb_cdMacro1_4Macro3Ab_cd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoMainVectorAb_cdMacro1_4Macro4Ab_cd] = std::make_unique<LinearValue>(
      Scales::ab_cd.invmap(0),
      Scales::ab_cd,
      "globalStereoMainVectorAb_cdMacro1_4Macro4Ab_cd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoMainVectorAb_cdMacro5_8Macro5Ab_cd] = std::make_unique<LinearValue>(
      Scales::ab_cd.invmap(0),
      Scales::ab_cd,
      "globalStereoMainVectorAb_cdMacro5_8Macro5Ab_cd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoMainVectorAb_cdMacro5_8Macro6Ab_cd] = std::make_unique<LinearValue>(
      Scales::ab_cd.invmap(0),
      Scales::ab_cd,
      "globalStereoMainVectorAb_cdMacro5_8Macro6Ab_cd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoMainVectorAb_cdMacro5_8Macro7Ab_cd] = std::make_unique<LinearValue>(
      Scales::ab_cd.invmap(0),
      Scales::ab_cd,
      "globalStereoMainVectorAb_cdMacro5_8Macro7Ab_cd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoMainVectorAb_cdMacro5_8Macro8Ab_cd] = std::make_unique<LinearValue>(
      Scales::ab_cd.invmap(0),
      Scales::ab_cd,
      "globalStereoMainVectorAb_cdMacro5_8Macro8Ab_cd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoMainVectorAc_bdMacro1_4Macro1Ac_bd] = std::make_unique<LinearValue>(
      Scales::ac_bd.invmap(0),
      Scales::ac_bd,
      "globalStereoMainVectorAc_bdMacro1_4Macro1Ac_bd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoMainVectorAc_bdMacro1_4Macro2Ac_bd] = std::make_unique<LinearValue>(
      Scales::ac_bd.invmap(0),
      Scales::ac_bd,
      "globalStereoMainVectorAc_bdMacro1_4Macro2Ac_bd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoMainVectorAc_bdMacro1_4Macro3Ac_bd] = std::make_unique<LinearValue>(
      Scales::ac_bd.invmap(0),
      Scales::ac_bd,
      "globalStereoMainVectorAc_bdMacro1_4Macro3Ac_bd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoMainVectorAc_bdMacro1_4Macro4Ac_bd] = std::make_unique<LinearValue>(
      Scales::ac_bd.invmap(0),
      Scales::ac_bd,
      "globalStereoMainVectorAc_bdMacro1_4Macro4Ac_bd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoMainVectorAc_bdMacro5_8Macro5Ac_bd] = std::make_unique<LinearValue>(
      Scales::ac_bd.invmap(0),
      Scales::ac_bd,
      "globalStereoMainVectorAc_bdMacro5_8Macro5Ac_bd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoMainVectorAc_bdMacro5_8Macro6Ac_bd] = std::make_unique<LinearValue>(
      Scales::ac_bd.invmap(0),
      Scales::ac_bd,
      "globalStereoMainVectorAc_bdMacro5_8Macro6Ac_bd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoMainVectorAc_bdMacro5_8Macro7Ac_bd] = std::make_unique<LinearValue>(
      Scales::ac_bd.invmap(0),
      Scales::ac_bd,
      "globalStereoMainVectorAc_bdMacro5_8Macro7Ac_bd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoMainVectorAc_bdMacro5_8Macro8Ac_bd] = std::make_unique<LinearValue>(
      Scales::ac_bd.invmap(0),
      Scales::ac_bd,
      "globalStereoMainVectorAc_bdMacro5_8Macro8Ac_bd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoL_roffsetVectorAb_cdMacro1_4Macro1Ab_cd] = std::make_unique<LinearValue>(
      Scales::ab_cd.invmap(0),
      Scales::ab_cd,
      "globalStereoL_roffsetVectorAb_cdMacro1_4Macro1Ab_cd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoL_roffsetVectorAb_cdMacro1_4Macro2Ab_cd] = std::make_unique<LinearValue>(
      Scales::ab_cd.invmap(0),
      Scales::ab_cd,
      "globalStereoL_roffsetVectorAb_cdMacro1_4Macro2Ab_cd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoL_roffsetVectorAb_cdMacro1_4Macro3Ab_cd] = std::make_unique<LinearValue>(
      Scales::ab_cd.invmap(0),
      Scales::ab_cd,
      "globalStereoL_roffsetVectorAb_cdMacro1_4Macro3Ab_cd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoL_roffsetVectorAb_cdMacro1_4Macro4Ab_cd] = std::make_unique<LinearValue>(
      Scales::ab_cd.invmap(0),
      Scales::ab_cd,
      "globalStereoL_roffsetVectorAb_cdMacro1_4Macro4Ab_cd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoL_roffsetVectorAb_cdMacro5_8Macro5Ab_cd] = std::make_unique<LinearValue>(
      Scales::ab_cd.invmap(0),
      Scales::ab_cd,
      "globalStereoL_roffsetVectorAb_cdMacro5_8Macro5Ab_cd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoL_roffsetVectorAb_cdMacro5_8Macro6Ab_cd] = std::make_unique<LinearValue>(
      Scales::ab_cd.invmap(0),
      Scales::ab_cd,
      "globalStereoL_roffsetVectorAb_cdMacro5_8Macro6Ab_cd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoL_roffsetVectorAb_cdMacro5_8Macro7Ab_cd] = std::make_unique<LinearValue>(
      Scales::ab_cd.invmap(0),
      Scales::ab_cd,
      "globalStereoL_roffsetVectorAb_cdMacro5_8Macro7Ab_cd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoL_roffsetVectorAb_cdMacro5_8Macro8Ab_cd] = std::make_unique<LinearValue>(
      Scales::ab_cd.invmap(0),
      Scales::ab_cd,
      "globalStereoL_roffsetVectorAb_cdMacro5_8Macro8Ab_cd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoL_roffsetVectorAc_bdMacro1_4Macro1Ac_bd] = std::make_unique<LinearValue>(
      Scales::ac_bd.invmap(0),
      Scales::ac_bd,
      "globalStereoL_roffsetVectorAc_bdMacro1_4Macro1Ac_bd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoL_roffsetVectorAc_bdMacro1_4Macro2Ac_bd] = std::make_unique<LinearValue>(
      Scales::ac_bd.invmap(0),
      Scales::ac_bd,
      "globalStereoL_roffsetVectorAc_bdMacro1_4Macro2Ac_bd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoL_roffsetVectorAc_bdMacro1_4Macro3Ac_bd] = std::make_unique<LinearValue>(
      Scales::ac_bd.invmap(0),
      Scales::ac_bd,
      "globalStereoL_roffsetVectorAc_bdMacro1_4Macro3Ac_bd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoL_roffsetVectorAc_bdMacro1_4Macro4Ac_bd] = std::make_unique<LinearValue>(
      Scales::ac_bd.invmap(0),
      Scales::ac_bd,
      "globalStereoL_roffsetVectorAc_bdMacro1_4Macro4Ac_bd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoL_roffsetVectorAc_bdMacro5_8Macro5Ac_bd] = std::make_unique<LinearValue>(
      Scales::ac_bd.invmap(0),
      Scales::ac_bd,
      "globalStereoL_roffsetVectorAc_bdMacro5_8Macro5Ac_bd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoL_roffsetVectorAc_bdMacro5_8Macro6Ac_bd] = std::make_unique<LinearValue>(
      Scales::ac_bd.invmap(0),
      Scales::ac_bd,
      "globalStereoL_roffsetVectorAc_bdMacro5_8Macro6Ac_bd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoL_roffsetVectorAc_bdMacro5_8Macro7Ac_bd] = std::make_unique<LinearValue>(
      Scales::ac_bd.invmap(0),
      Scales::ac_bd,
      "globalStereoL_roffsetVectorAc_bdMacro5_8Macro7Ac_bd",
      0 | kParameterIsAutomable);
    value[ID::globalStereoL_roffsetVectorAc_bdMacro5_8Macro8Ac_bd] = std::make_unique<LinearValue>(
      Scales::ac_bd.invmap(0),
      Scales::ac_bd,
      "globalStereoL_roffsetVectorAc_bdMacro5_8Macro8Ac_bd",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakMixSvfMacro1_4Macro1Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoMainMixTweakMixSvfMacro1_4Macro1Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakMixSvfMacro1_4Macro2Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoMainMixTweakMixSvfMacro1_4Macro2Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakMixSvfMacro1_4Macro3Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoMainMixTweakMixSvfMacro1_4Macro3Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakMixSvfMacro1_4Macro4Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoMainMixTweakMixSvfMacro1_4Macro4Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakMixSvfMacro5_8Macro5Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoMainMixTweakMixSvfMacro5_8Macro5Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakMixSvfMacro5_8Macro6Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoMainMixTweakMixSvfMacro5_8Macro6Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakMixSvfMacro5_8Macro7Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoMainMixTweakMixSvfMacro5_8Macro7Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakMixSvfMacro5_8Macro8Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoMainMixTweakMixSvfMacro5_8Macro8Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakMixMs20Macro1_4Macro1Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoMainMixTweakMixMs20Macro1_4Macro1Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakMixMs20Macro1_4Macro2Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoMainMixTweakMixMs20Macro1_4Macro2Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakMixMs20Macro1_4Macro3Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoMainMixTweakMixMs20Macro1_4Macro3Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakMixMs20Macro1_4Macro4Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoMainMixTweakMixMs20Macro1_4Macro4Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakMixMs20Macro5_8Macro5Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoMainMixTweakMixMs20Macro5_8Macro5Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakMixMs20Macro5_8Macro6Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoMainMixTweakMixMs20Macro5_8Macro6Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakMixMs20Macro5_8Macro7Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoMainMixTweakMixMs20Macro5_8Macro7Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakMixMs20Macro5_8Macro8Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoMainMixTweakMixMs20Macro5_8Macro8Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakMixOberheimMacro1_4Macro1Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoMainMixTweakMixOberheimMacro1_4Macro1Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakMixOberheimMacro1_4Macro2Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoMainMixTweakMixOberheimMacro1_4Macro2Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakMixOberheimMacro1_4Macro3Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoMainMixTweakMixOberheimMacro1_4Macro3Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakMixOberheimMacro1_4Macro4Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoMainMixTweakMixOberheimMacro1_4Macro4Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakMixOberheimMacro5_8Macro5Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoMainMixTweakMixOberheimMacro5_8Macro5Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakMixOberheimMacro5_8Macro6Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoMainMixTweakMixOberheimMacro5_8Macro6Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakMixOberheimMacro5_8Macro7Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoMainMixTweakMixOberheimMacro5_8Macro7Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakMixOberheimMacro5_8Macro8Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoMainMixTweakMixOberheimMacro5_8Macro8Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakTweakFreqMacro1_4Macro1Normfreq] = std::make_unique<LinearValue>(
      Scales::normfreq.invmap(0),
      Scales::normfreq,
      "filterStereoMainMixTweakTweakFreqMacro1_4Macro1Normfreq",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakTweakFreqMacro1_4Macro2Normfreq] = std::make_unique<LinearValue>(
      Scales::normfreq.invmap(0),
      Scales::normfreq,
      "filterStereoMainMixTweakTweakFreqMacro1_4Macro2Normfreq",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakTweakFreqMacro1_4Macro3Normfreq] = std::make_unique<LinearValue>(
      Scales::normfreq.invmap(0),
      Scales::normfreq,
      "filterStereoMainMixTweakTweakFreqMacro1_4Macro3Normfreq",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakTweakFreqMacro1_4Macro4Normfreq] = std::make_unique<LinearValue>(
      Scales::normfreq.invmap(0),
      Scales::normfreq,
      "filterStereoMainMixTweakTweakFreqMacro1_4Macro4Normfreq",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakTweakFreqMacro5_8Macro5Normfreq] = std::make_unique<LinearValue>(
      Scales::normfreq.invmap(0),
      Scales::normfreq,
      "filterStereoMainMixTweakTweakFreqMacro5_8Macro5Normfreq",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakTweakFreqMacro5_8Macro6Normfreq] = std::make_unique<LinearValue>(
      Scales::normfreq.invmap(0),
      Scales::normfreq,
      "filterStereoMainMixTweakTweakFreqMacro5_8Macro6Normfreq",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakTweakFreqMacro5_8Macro7Normfreq] = std::make_unique<LinearValue>(
      Scales::normfreq.invmap(0),
      Scales::normfreq,
      "filterStereoMainMixTweakTweakFreqMacro5_8Macro7Normfreq",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakTweakFreqMacro5_8Macro8Normfreq] = std::make_unique<LinearValue>(
      Scales::normfreq.invmap(0),
      Scales::normfreq,
      "filterStereoMainMixTweakTweakFreqMacro5_8Macro8Normfreq",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakTweakQMacro1_4Macro1Q] = std::make_unique<LinearValue>(
      Scales::q.invmap(0),
      Scales::q,
      "filterStereoMainMixTweakTweakQMacro1_4Macro1Q",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakTweakQMacro1_4Macro2Q] = std::make_unique<LinearValue>(
      Scales::q.invmap(0),
      Scales::q,
      "filterStereoMainMixTweakTweakQMacro1_4Macro2Q",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakTweakQMacro1_4Macro3Q] = std::make_unique<LinearValue>(
      Scales::q.invmap(0),
      Scales::q,
      "filterStereoMainMixTweakTweakQMacro1_4Macro3Q",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakTweakQMacro1_4Macro4Q] = std::make_unique<LinearValue>(
      Scales::q.invmap(0),
      Scales::q,
      "filterStereoMainMixTweakTweakQMacro1_4Macro4Q",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakTweakQMacro5_8Macro5Q] = std::make_unique<LinearValue>(
      Scales::q.invmap(0),
      Scales::q,
      "filterStereoMainMixTweakTweakQMacro5_8Macro5Q",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakTweakQMacro5_8Macro6Q] = std::make_unique<LinearValue>(
      Scales::q.invmap(0),
      Scales::q,
      "filterStereoMainMixTweakTweakQMacro5_8Macro6Q",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakTweakQMacro5_8Macro7Q] = std::make_unique<LinearValue>(
      Scales::q.invmap(0),
      Scales::q,
      "filterStereoMainMixTweakTweakQMacro5_8Macro7Q",
      0 | kParameterIsAutomable);
    value[ID::filterStereoMainMixTweakTweakQMacro5_8Macro8Q] = std::make_unique<LinearValue>(
      Scales::q.invmap(0),
      Scales::q,
      "filterStereoMainMixTweakTweakQMacro5_8Macro8Q",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakMixSvfMacro1_4Macro1Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoL_roffsetMixTweakMixSvfMacro1_4Macro1Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakMixSvfMacro1_4Macro2Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoL_roffsetMixTweakMixSvfMacro1_4Macro2Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakMixSvfMacro1_4Macro3Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoL_roffsetMixTweakMixSvfMacro1_4Macro3Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakMixSvfMacro1_4Macro4Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoL_roffsetMixTweakMixSvfMacro1_4Macro4Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakMixSvfMacro5_8Macro5Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoL_roffsetMixTweakMixSvfMacro5_8Macro5Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakMixSvfMacro5_8Macro6Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoL_roffsetMixTweakMixSvfMacro5_8Macro6Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakMixSvfMacro5_8Macro7Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoL_roffsetMixTweakMixSvfMacro5_8Macro7Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakMixSvfMacro5_8Macro8Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoL_roffsetMixTweakMixSvfMacro5_8Macro8Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakMixMs20Macro1_4Macro1Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoL_roffsetMixTweakMixMs20Macro1_4Macro1Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakMixMs20Macro1_4Macro2Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoL_roffsetMixTweakMixMs20Macro1_4Macro2Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakMixMs20Macro1_4Macro3Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoL_roffsetMixTweakMixMs20Macro1_4Macro3Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakMixMs20Macro1_4Macro4Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoL_roffsetMixTweakMixMs20Macro1_4Macro4Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakMixMs20Macro5_8Macro5Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoL_roffsetMixTweakMixMs20Macro5_8Macro5Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakMixMs20Macro5_8Macro6Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoL_roffsetMixTweakMixMs20Macro5_8Macro6Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakMixMs20Macro5_8Macro7Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoL_roffsetMixTweakMixMs20Macro5_8Macro7Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakMixMs20Macro5_8Macro8Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoL_roffsetMixTweakMixMs20Macro5_8Macro8Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakMixOberheimMacro1_4Macro1Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoL_roffsetMixTweakMixOberheimMacro1_4Macro1Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakMixOberheimMacro1_4Macro2Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoL_roffsetMixTweakMixOberheimMacro1_4Macro2Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakMixOberheimMacro1_4Macro3Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoL_roffsetMixTweakMixOberheimMacro1_4Macro3Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakMixOberheimMacro1_4Macro4Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoL_roffsetMixTweakMixOberheimMacro1_4Macro4Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakMixOberheimMacro5_8Macro5Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoL_roffsetMixTweakMixOberheimMacro5_8Macro5Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakMixOberheimMacro5_8Macro6Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoL_roffsetMixTweakMixOberheimMacro5_8Macro6Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakMixOberheimMacro5_8Macro7Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoL_roffsetMixTweakMixOberheimMacro5_8Macro7Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakMixOberheimMacro5_8Macro8Level] = std::make_unique<LinearValue>(
      Scales::level.invmap(0),
      Scales::level,
      "filterStereoL_roffsetMixTweakMixOberheimMacro5_8Macro8Level",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakTweakFreqMacro1_4Macro1Normfreq] = std::make_unique<LinearValue>(
      Scales::normfreq.invmap(0),
      Scales::normfreq,
      "filterStereoL_roffsetMixTweakTweakFreqMacro1_4Macro1Normfreq",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakTweakFreqMacro1_4Macro2Normfreq] = std::make_unique<LinearValue>(
      Scales::normfreq.invmap(0),
      Scales::normfreq,
      "filterStereoL_roffsetMixTweakTweakFreqMacro1_4Macro2Normfreq",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakTweakFreqMacro1_4Macro3Normfreq] = std::make_unique<LinearValue>(
      Scales::normfreq.invmap(0),
      Scales::normfreq,
      "filterStereoL_roffsetMixTweakTweakFreqMacro1_4Macro3Normfreq",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakTweakFreqMacro1_4Macro4Normfreq] = std::make_unique<LinearValue>(
      Scales::normfreq.invmap(0),
      Scales::normfreq,
      "filterStereoL_roffsetMixTweakTweakFreqMacro1_4Macro4Normfreq",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakTweakFreqMacro5_8Macro5Normfreq] = std::make_unique<LinearValue>(
      Scales::normfreq.invmap(0),
      Scales::normfreq,
      "filterStereoL_roffsetMixTweakTweakFreqMacro5_8Macro5Normfreq",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakTweakFreqMacro5_8Macro6Normfreq] = std::make_unique<LinearValue>(
      Scales::normfreq.invmap(0),
      Scales::normfreq,
      "filterStereoL_roffsetMixTweakTweakFreqMacro5_8Macro6Normfreq",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakTweakFreqMacro5_8Macro7Normfreq] = std::make_unique<LinearValue>(
      Scales::normfreq.invmap(0),
      Scales::normfreq,
      "filterStereoL_roffsetMixTweakTweakFreqMacro5_8Macro7Normfreq",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakTweakFreqMacro5_8Macro8Normfreq] = std::make_unique<LinearValue>(
      Scales::normfreq.invmap(0),
      Scales::normfreq,
      "filterStereoL_roffsetMixTweakTweakFreqMacro5_8Macro8Normfreq",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakTweakQMacro1_4Macro1Q] = std::make_unique<LinearValue>(
      Scales::q.invmap(0),
      Scales::q,
      "filterStereoL_roffsetMixTweakTweakQMacro1_4Macro1Q",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakTweakQMacro1_4Macro2Q] = std::make_unique<LinearValue>(
      Scales::q.invmap(0),
      Scales::q,
      "filterStereoL_roffsetMixTweakTweakQMacro1_4Macro2Q",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakTweakQMacro1_4Macro3Q] = std::make_unique<LinearValue>(
      Scales::q.invmap(0),
      Scales::q,
      "filterStereoL_roffsetMixTweakTweakQMacro1_4Macro3Q",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakTweakQMacro1_4Macro4Q] = std::make_unique<LinearValue>(
      Scales::q.invmap(0),
      Scales::q,
      "filterStereoL_roffsetMixTweakTweakQMacro1_4Macro4Q",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakTweakQMacro5_8Macro5Q] = std::make_unique<LinearValue>(
      Scales::q.invmap(0),
      Scales::q,
      "filterStereoL_roffsetMixTweakTweakQMacro5_8Macro5Q",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakTweakQMacro5_8Macro6Q] = std::make_unique<LinearValue>(
      Scales::q.invmap(0),
      Scales::q,
      "filterStereoL_roffsetMixTweakTweakQMacro5_8Macro6Q",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakTweakQMacro5_8Macro7Q] = std::make_unique<LinearValue>(
      Scales::q.invmap(0),
      Scales::q,
      "filterStereoL_roffsetMixTweakTweakQMacro5_8Macro7Q",
      0 | kParameterIsAutomable);
    value[ID::filterStereoL_roffsetMixTweakTweakQMacro5_8Macro8Q] = std::make_unique<LinearValue>(
      Scales::q.invmap(0),
      Scales::q,
      "filterStereoL_roffsetMixTweakTweakQMacro5_8Macro8Q",
      0 | kParameterIsAutomable);
    value[ID::aStereoMainCzPmCzIndexMacro1_4Macro1Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "aStereoMainCzPmCzIndexMacro1_4Macro1Index",
      0 | kParameterIsAutomable);
    value[ID::aStereoMainCzPmCzIndexMacro1_4Macro2Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "aStereoMainCzPmCzIndexMacro1_4Macro2Index",
      0 | kParameterIsAutomable);
    value[ID::aStereoMainCzPmCzIndexMacro1_4Macro3Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "aStereoMainCzPmCzIndexMacro1_4Macro3Index",
      0 | kParameterIsAutomable);
    value[ID::aStereoMainCzPmCzIndexMacro1_4Macro4Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "aStereoMainCzPmCzIndexMacro1_4Macro4Index",
      0 | kParameterIsAutomable);
    value[ID::aStereoMainCzPmCzIndexMacro5_8Macro5Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "aStereoMainCzPmCzIndexMacro5_8Macro5Index",
      0 | kParameterIsAutomable);
    value[ID::aStereoMainCzPmCzIndexMacro5_8Macro6Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "aStereoMainCzPmCzIndexMacro5_8Macro6Index",
      0 | kParameterIsAutomable);
    value[ID::aStereoMainCzPmCzIndexMacro5_8Macro7Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "aStereoMainCzPmCzIndexMacro5_8Macro7Index",
      0 | kParameterIsAutomable);
    value[ID::aStereoMainCzPmCzIndexMacro5_8Macro8Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "aStereoMainCzPmCzIndexMacro5_8Macro8Index",
      0 | kParameterIsAutomable);
    value[ID::aStereoMainCzPmCzOctaveMacro1_4Macro1Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "aStereoMainCzPmCzOctaveMacro1_4Macro1Octave",
      0 | kParameterIsAutomable);
    value[ID::aStereoMainCzPmCzOctaveMacro1_4Macro2Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "aStereoMainCzPmCzOctaveMacro1_4Macro2Octave",
      0 | kParameterIsAutomable);
    value[ID::aStereoMainCzPmCzOctaveMacro1_4Macro3Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "aStereoMainCzPmCzOctaveMacro1_4Macro3Octave",
      0 | kParameterIsAutomable);
    value[ID::aStereoMainCzPmCzOctaveMacro1_4Macro4Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "aStereoMainCzPmCzOctaveMacro1_4Macro4Octave",
      0 | kParameterIsAutomable);
    value[ID::aStereoMainCzPmCzOctaveMacro5_8Macro5Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "aStereoMainCzPmCzOctaveMacro5_8Macro5Octave",
      0 | kParameterIsAutomable);
    value[ID::aStereoMainCzPmCzOctaveMacro5_8Macro6Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "aStereoMainCzPmCzOctaveMacro5_8Macro6Octave",
      0 | kParameterIsAutomable);
    value[ID::aStereoMainCzPmCzOctaveMacro5_8Macro7Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "aStereoMainCzPmCzOctaveMacro5_8Macro7Octave",
      0 | kParameterIsAutomable);
    value[ID::aStereoMainCzPmCzOctaveMacro5_8Macro8Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "aStereoMainCzPmCzOctaveMacro5_8Macro8Octave",
      0 | kParameterIsAutomable);
    value[ID::aStereoMainCzPmCzPhaseMacro1_4Macro1Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "aStereoMainCzPmCzPhaseMacro1_4Macro1Phase",
      0 | kParameterIsAutomable);
    value[ID::aStereoMainCzPmCzPhaseMacro1_4Macro2Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "aStereoMainCzPmCzPhaseMacro1_4Macro2Phase",
      0 | kParameterIsAutomable);
    value[ID::aStereoMainCzPmCzPhaseMacro1_4Macro3Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "aStereoMainCzPmCzPhaseMacro1_4Macro3Phase",
      0 | kParameterIsAutomable);
    value[ID::aStereoMainCzPmCzPhaseMacro1_4Macro4Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "aStereoMainCzPmCzPhaseMacro1_4Macro4Phase",
      0 | kParameterIsAutomable);
    value[ID::aStereoMainCzPmCzPhaseMacro5_8Macro5Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "aStereoMainCzPmCzPhaseMacro5_8Macro5Phase",
      0 | kParameterIsAutomable);
    value[ID::aStereoMainCzPmCzPhaseMacro5_8Macro6Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "aStereoMainCzPmCzPhaseMacro5_8Macro6Phase",
      0 | kParameterIsAutomable);
    value[ID::aStereoMainCzPmCzPhaseMacro5_8Macro7Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "aStereoMainCzPmCzPhaseMacro5_8Macro7Phase",
      0 | kParameterIsAutomable);
    value[ID::aStereoMainCzPmCzPhaseMacro5_8Macro8Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "aStereoMainCzPmCzPhaseMacro5_8Macro8Phase",
      0 | kParameterIsAutomable);
    value[ID::aStereoMainCzPmPmPmaMacro1_4Macro1Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "aStereoMainCzPmPmPmaMacro1_4Macro1Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmaMacro1_4Macro2Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "aStereoMainCzPmPmPmaMacro1_4Macro2Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmaMacro1_4Macro3Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "aStereoMainCzPmPmPmaMacro1_4Macro3Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmaMacro1_4Macro4Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "aStereoMainCzPmPmPmaMacro1_4Macro4Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmaMacro5_8Macro5Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "aStereoMainCzPmPmPmaMacro5_8Macro5Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmaMacro5_8Macro6Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "aStereoMainCzPmPmPmaMacro5_8Macro6Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmaMacro5_8Macro7Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "aStereoMainCzPmPmPmaMacro5_8Macro7Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmaMacro5_8Macro8Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "aStereoMainCzPmPmPmaMacro5_8Macro8Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmbMacro1_4Macro1Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "aStereoMainCzPmPmPmbMacro1_4Macro1Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmbMacro1_4Macro2Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "aStereoMainCzPmPmPmbMacro1_4Macro2Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmbMacro1_4Macro3Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "aStereoMainCzPmPmPmbMacro1_4Macro3Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmbMacro1_4Macro4Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "aStereoMainCzPmPmPmbMacro1_4Macro4Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmbMacro5_8Macro5Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "aStereoMainCzPmPmPmbMacro5_8Macro5Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmbMacro5_8Macro6Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "aStereoMainCzPmPmPmbMacro5_8Macro6Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmbMacro5_8Macro7Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "aStereoMainCzPmPmPmbMacro5_8Macro7Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmbMacro5_8Macro8Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "aStereoMainCzPmPmPmbMacro5_8Macro8Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmcMacro1_4Macro1Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "aStereoMainCzPmPmPmcMacro1_4Macro1Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmcMacro1_4Macro2Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "aStereoMainCzPmPmPmcMacro1_4Macro2Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmcMacro1_4Macro3Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "aStereoMainCzPmPmPmcMacro1_4Macro3Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmcMacro1_4Macro4Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "aStereoMainCzPmPmPmcMacro1_4Macro4Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmcMacro5_8Macro5Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "aStereoMainCzPmPmPmcMacro5_8Macro5Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmcMacro5_8Macro6Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "aStereoMainCzPmPmPmcMacro5_8Macro6Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmcMacro5_8Macro7Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "aStereoMainCzPmPmPmcMacro5_8Macro7Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmcMacro5_8Macro8Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "aStereoMainCzPmPmPmcMacro5_8Macro8Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmdMacro1_4Macro1Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "aStereoMainCzPmPmPmdMacro1_4Macro1Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmdMacro1_4Macro2Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "aStereoMainCzPmPmPmdMacro1_4Macro2Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmdMacro1_4Macro3Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "aStereoMainCzPmPmPmdMacro1_4Macro3Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmdMacro1_4Macro4Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "aStereoMainCzPmPmPmdMacro1_4Macro4Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmdMacro5_8Macro5Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "aStereoMainCzPmPmPmdMacro5_8Macro5Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmdMacro5_8Macro6Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "aStereoMainCzPmPmPmdMacro5_8Macro6Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmdMacro5_8Macro7Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "aStereoMainCzPmPmPmdMacro5_8Macro7Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoMainCzPmPmPmdMacro5_8Macro8Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "aStereoMainCzPmPmPmdMacro5_8Macro8Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmCzIndexMacro1_4Macro1Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "aStereoL_roffsetCzPmCzIndexMacro1_4Macro1Index",
      0 | kParameterIsAutomable);
    value[ID::aStereoL_roffsetCzPmCzIndexMacro1_4Macro2Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "aStereoL_roffsetCzPmCzIndexMacro1_4Macro2Index",
      0 | kParameterIsAutomable);
    value[ID::aStereoL_roffsetCzPmCzIndexMacro1_4Macro3Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "aStereoL_roffsetCzPmCzIndexMacro1_4Macro3Index",
      0 | kParameterIsAutomable);
    value[ID::aStereoL_roffsetCzPmCzIndexMacro1_4Macro4Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "aStereoL_roffsetCzPmCzIndexMacro1_4Macro4Index",
      0 | kParameterIsAutomable);
    value[ID::aStereoL_roffsetCzPmCzIndexMacro5_8Macro5Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "aStereoL_roffsetCzPmCzIndexMacro5_8Macro5Index",
      0 | kParameterIsAutomable);
    value[ID::aStereoL_roffsetCzPmCzIndexMacro5_8Macro6Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "aStereoL_roffsetCzPmCzIndexMacro5_8Macro6Index",
      0 | kParameterIsAutomable);
    value[ID::aStereoL_roffsetCzPmCzIndexMacro5_8Macro7Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "aStereoL_roffsetCzPmCzIndexMacro5_8Macro7Index",
      0 | kParameterIsAutomable);
    value[ID::aStereoL_roffsetCzPmCzIndexMacro5_8Macro8Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "aStereoL_roffsetCzPmCzIndexMacro5_8Macro8Index",
      0 | kParameterIsAutomable);
    value[ID::aStereoL_roffsetCzPmCzOctaveMacro1_4Macro1Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "aStereoL_roffsetCzPmCzOctaveMacro1_4Macro1Octave",
      0 | kParameterIsAutomable);
    value[ID::aStereoL_roffsetCzPmCzOctaveMacro1_4Macro2Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "aStereoL_roffsetCzPmCzOctaveMacro1_4Macro2Octave",
      0 | kParameterIsAutomable);
    value[ID::aStereoL_roffsetCzPmCzOctaveMacro1_4Macro3Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "aStereoL_roffsetCzPmCzOctaveMacro1_4Macro3Octave",
      0 | kParameterIsAutomable);
    value[ID::aStereoL_roffsetCzPmCzOctaveMacro1_4Macro4Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "aStereoL_roffsetCzPmCzOctaveMacro1_4Macro4Octave",
      0 | kParameterIsAutomable);
    value[ID::aStereoL_roffsetCzPmCzOctaveMacro5_8Macro5Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "aStereoL_roffsetCzPmCzOctaveMacro5_8Macro5Octave",
      0 | kParameterIsAutomable);
    value[ID::aStereoL_roffsetCzPmCzOctaveMacro5_8Macro6Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "aStereoL_roffsetCzPmCzOctaveMacro5_8Macro6Octave",
      0 | kParameterIsAutomable);
    value[ID::aStereoL_roffsetCzPmCzOctaveMacro5_8Macro7Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "aStereoL_roffsetCzPmCzOctaveMacro5_8Macro7Octave",
      0 | kParameterIsAutomable);
    value[ID::aStereoL_roffsetCzPmCzOctaveMacro5_8Macro8Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "aStereoL_roffsetCzPmCzOctaveMacro5_8Macro8Octave",
      0 | kParameterIsAutomable);
    value[ID::aStereoL_roffsetCzPmCzPhaseMacro1_4Macro1Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "aStereoL_roffsetCzPmCzPhaseMacro1_4Macro1Phase",
      0 | kParameterIsAutomable);
    value[ID::aStereoL_roffsetCzPmCzPhaseMacro1_4Macro2Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "aStereoL_roffsetCzPmCzPhaseMacro1_4Macro2Phase",
      0 | kParameterIsAutomable);
    value[ID::aStereoL_roffsetCzPmCzPhaseMacro1_4Macro3Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "aStereoL_roffsetCzPmCzPhaseMacro1_4Macro3Phase",
      0 | kParameterIsAutomable);
    value[ID::aStereoL_roffsetCzPmCzPhaseMacro1_4Macro4Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "aStereoL_roffsetCzPmCzPhaseMacro1_4Macro4Phase",
      0 | kParameterIsAutomable);
    value[ID::aStereoL_roffsetCzPmCzPhaseMacro5_8Macro5Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "aStereoL_roffsetCzPmCzPhaseMacro5_8Macro5Phase",
      0 | kParameterIsAutomable);
    value[ID::aStereoL_roffsetCzPmCzPhaseMacro5_8Macro6Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "aStereoL_roffsetCzPmCzPhaseMacro5_8Macro6Phase",
      0 | kParameterIsAutomable);
    value[ID::aStereoL_roffsetCzPmCzPhaseMacro5_8Macro7Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "aStereoL_roffsetCzPmCzPhaseMacro5_8Macro7Phase",
      0 | kParameterIsAutomable);
    value[ID::aStereoL_roffsetCzPmCzPhaseMacro5_8Macro8Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "aStereoL_roffsetCzPmCzPhaseMacro5_8Macro8Phase",
      0 | kParameterIsAutomable);
    value[ID::aStereoL_roffsetCzPmPmPmaMacro1_4Macro1Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "aStereoL_roffsetCzPmPmPmaMacro1_4Macro1Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmaMacro1_4Macro2Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "aStereoL_roffsetCzPmPmPmaMacro1_4Macro2Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmaMacro1_4Macro3Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "aStereoL_roffsetCzPmPmPmaMacro1_4Macro3Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmaMacro1_4Macro4Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "aStereoL_roffsetCzPmPmPmaMacro1_4Macro4Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmaMacro5_8Macro5Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "aStereoL_roffsetCzPmPmPmaMacro5_8Macro5Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmaMacro5_8Macro6Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "aStereoL_roffsetCzPmPmPmaMacro5_8Macro6Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmaMacro5_8Macro7Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "aStereoL_roffsetCzPmPmPmaMacro5_8Macro7Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmaMacro5_8Macro8Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "aStereoL_roffsetCzPmPmPmaMacro5_8Macro8Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmbMacro1_4Macro1Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "aStereoL_roffsetCzPmPmPmbMacro1_4Macro1Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmbMacro1_4Macro2Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "aStereoL_roffsetCzPmPmPmbMacro1_4Macro2Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmbMacro1_4Macro3Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "aStereoL_roffsetCzPmPmPmbMacro1_4Macro3Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmbMacro1_4Macro4Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "aStereoL_roffsetCzPmPmPmbMacro1_4Macro4Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmbMacro5_8Macro5Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "aStereoL_roffsetCzPmPmPmbMacro5_8Macro5Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmbMacro5_8Macro6Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "aStereoL_roffsetCzPmPmPmbMacro5_8Macro6Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmbMacro5_8Macro7Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "aStereoL_roffsetCzPmPmPmbMacro5_8Macro7Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmbMacro5_8Macro8Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "aStereoL_roffsetCzPmPmPmbMacro5_8Macro8Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmcMacro1_4Macro1Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "aStereoL_roffsetCzPmPmPmcMacro1_4Macro1Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmcMacro1_4Macro2Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "aStereoL_roffsetCzPmPmPmcMacro1_4Macro2Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmcMacro1_4Macro3Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "aStereoL_roffsetCzPmPmPmcMacro1_4Macro3Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmcMacro1_4Macro4Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "aStereoL_roffsetCzPmPmPmcMacro1_4Macro4Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmcMacro5_8Macro5Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "aStereoL_roffsetCzPmPmPmcMacro5_8Macro5Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmcMacro5_8Macro6Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "aStereoL_roffsetCzPmPmPmcMacro5_8Macro6Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmcMacro5_8Macro7Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "aStereoL_roffsetCzPmPmPmcMacro5_8Macro7Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmcMacro5_8Macro8Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "aStereoL_roffsetCzPmPmPmcMacro5_8Macro8Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmdMacro1_4Macro1Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "aStereoL_roffsetCzPmPmPmdMacro1_4Macro1Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmdMacro1_4Macro2Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "aStereoL_roffsetCzPmPmPmdMacro1_4Macro2Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmdMacro1_4Macro3Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "aStereoL_roffsetCzPmPmPmdMacro1_4Macro3Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmdMacro1_4Macro4Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "aStereoL_roffsetCzPmPmPmdMacro1_4Macro4Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmdMacro5_8Macro5Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "aStereoL_roffsetCzPmPmPmdMacro5_8Macro5Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmdMacro5_8Macro6Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "aStereoL_roffsetCzPmPmPmdMacro5_8Macro6Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmdMacro5_8Macro7Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "aStereoL_roffsetCzPmPmPmdMacro5_8Macro7Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aStereoL_roffsetCzPmPmPmdMacro5_8Macro8Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "aStereoL_roffsetCzPmPmPmdMacro5_8Macro8Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::aType] = std::make_unique<IntValue>(
      Scales::type.invmap(2),
      Scales::type,
      "aType",
      0 | kParameterIsAutomable | kParameterIsInteger);
    value[ID::bStereoMainCzPmCzIndexMacro1_4Macro1Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "bStereoMainCzPmCzIndexMacro1_4Macro1Index",
      0 | kParameterIsAutomable);
    value[ID::bStereoMainCzPmCzIndexMacro1_4Macro2Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "bStereoMainCzPmCzIndexMacro1_4Macro2Index",
      0 | kParameterIsAutomable);
    value[ID::bStereoMainCzPmCzIndexMacro1_4Macro3Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "bStereoMainCzPmCzIndexMacro1_4Macro3Index",
      0 | kParameterIsAutomable);
    value[ID::bStereoMainCzPmCzIndexMacro1_4Macro4Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "bStereoMainCzPmCzIndexMacro1_4Macro4Index",
      0 | kParameterIsAutomable);
    value[ID::bStereoMainCzPmCzIndexMacro5_8Macro5Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "bStereoMainCzPmCzIndexMacro5_8Macro5Index",
      0 | kParameterIsAutomable);
    value[ID::bStereoMainCzPmCzIndexMacro5_8Macro6Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "bStereoMainCzPmCzIndexMacro5_8Macro6Index",
      0 | kParameterIsAutomable);
    value[ID::bStereoMainCzPmCzIndexMacro5_8Macro7Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "bStereoMainCzPmCzIndexMacro5_8Macro7Index",
      0 | kParameterIsAutomable);
    value[ID::bStereoMainCzPmCzIndexMacro5_8Macro8Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "bStereoMainCzPmCzIndexMacro5_8Macro8Index",
      0 | kParameterIsAutomable);
    value[ID::bStereoMainCzPmCzOctaveMacro1_4Macro1Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "bStereoMainCzPmCzOctaveMacro1_4Macro1Octave",
      0 | kParameterIsAutomable);
    value[ID::bStereoMainCzPmCzOctaveMacro1_4Macro2Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "bStereoMainCzPmCzOctaveMacro1_4Macro2Octave",
      0 | kParameterIsAutomable);
    value[ID::bStereoMainCzPmCzOctaveMacro1_4Macro3Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "bStereoMainCzPmCzOctaveMacro1_4Macro3Octave",
      0 | kParameterIsAutomable);
    value[ID::bStereoMainCzPmCzOctaveMacro1_4Macro4Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "bStereoMainCzPmCzOctaveMacro1_4Macro4Octave",
      0 | kParameterIsAutomable);
    value[ID::bStereoMainCzPmCzOctaveMacro5_8Macro5Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "bStereoMainCzPmCzOctaveMacro5_8Macro5Octave",
      0 | kParameterIsAutomable);
    value[ID::bStereoMainCzPmCzOctaveMacro5_8Macro6Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "bStereoMainCzPmCzOctaveMacro5_8Macro6Octave",
      0 | kParameterIsAutomable);
    value[ID::bStereoMainCzPmCzOctaveMacro5_8Macro7Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "bStereoMainCzPmCzOctaveMacro5_8Macro7Octave",
      0 | kParameterIsAutomable);
    value[ID::bStereoMainCzPmCzOctaveMacro5_8Macro8Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "bStereoMainCzPmCzOctaveMacro5_8Macro8Octave",
      0 | kParameterIsAutomable);
    value[ID::bStereoMainCzPmCzPhaseMacro1_4Macro1Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "bStereoMainCzPmCzPhaseMacro1_4Macro1Phase",
      0 | kParameterIsAutomable);
    value[ID::bStereoMainCzPmCzPhaseMacro1_4Macro2Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "bStereoMainCzPmCzPhaseMacro1_4Macro2Phase",
      0 | kParameterIsAutomable);
    value[ID::bStereoMainCzPmCzPhaseMacro1_4Macro3Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "bStereoMainCzPmCzPhaseMacro1_4Macro3Phase",
      0 | kParameterIsAutomable);
    value[ID::bStereoMainCzPmCzPhaseMacro1_4Macro4Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "bStereoMainCzPmCzPhaseMacro1_4Macro4Phase",
      0 | kParameterIsAutomable);
    value[ID::bStereoMainCzPmCzPhaseMacro5_8Macro5Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "bStereoMainCzPmCzPhaseMacro5_8Macro5Phase",
      0 | kParameterIsAutomable);
    value[ID::bStereoMainCzPmCzPhaseMacro5_8Macro6Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "bStereoMainCzPmCzPhaseMacro5_8Macro6Phase",
      0 | kParameterIsAutomable);
    value[ID::bStereoMainCzPmCzPhaseMacro5_8Macro7Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "bStereoMainCzPmCzPhaseMacro5_8Macro7Phase",
      0 | kParameterIsAutomable);
    value[ID::bStereoMainCzPmCzPhaseMacro5_8Macro8Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "bStereoMainCzPmCzPhaseMacro5_8Macro8Phase",
      0 | kParameterIsAutomable);
    value[ID::bStereoMainCzPmPmPmaMacro1_4Macro1Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "bStereoMainCzPmPmPmaMacro1_4Macro1Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmaMacro1_4Macro2Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "bStereoMainCzPmPmPmaMacro1_4Macro2Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmaMacro1_4Macro3Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "bStereoMainCzPmPmPmaMacro1_4Macro3Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmaMacro1_4Macro4Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "bStereoMainCzPmPmPmaMacro1_4Macro4Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmaMacro5_8Macro5Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "bStereoMainCzPmPmPmaMacro5_8Macro5Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmaMacro5_8Macro6Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "bStereoMainCzPmPmPmaMacro5_8Macro6Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmaMacro5_8Macro7Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "bStereoMainCzPmPmPmaMacro5_8Macro7Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmaMacro5_8Macro8Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "bStereoMainCzPmPmPmaMacro5_8Macro8Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmbMacro1_4Macro1Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "bStereoMainCzPmPmPmbMacro1_4Macro1Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmbMacro1_4Macro2Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "bStereoMainCzPmPmPmbMacro1_4Macro2Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmbMacro1_4Macro3Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "bStereoMainCzPmPmPmbMacro1_4Macro3Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmbMacro1_4Macro4Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "bStereoMainCzPmPmPmbMacro1_4Macro4Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmbMacro5_8Macro5Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "bStereoMainCzPmPmPmbMacro5_8Macro5Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmbMacro5_8Macro6Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "bStereoMainCzPmPmPmbMacro5_8Macro6Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmbMacro5_8Macro7Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "bStereoMainCzPmPmPmbMacro5_8Macro7Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmbMacro5_8Macro8Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "bStereoMainCzPmPmPmbMacro5_8Macro8Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmcMacro1_4Macro1Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "bStereoMainCzPmPmPmcMacro1_4Macro1Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmcMacro1_4Macro2Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "bStereoMainCzPmPmPmcMacro1_4Macro2Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmcMacro1_4Macro3Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "bStereoMainCzPmPmPmcMacro1_4Macro3Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmcMacro1_4Macro4Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "bStereoMainCzPmPmPmcMacro1_4Macro4Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmcMacro5_8Macro5Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "bStereoMainCzPmPmPmcMacro5_8Macro5Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmcMacro5_8Macro6Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "bStereoMainCzPmPmPmcMacro5_8Macro6Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmcMacro5_8Macro7Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "bStereoMainCzPmPmPmcMacro5_8Macro7Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmcMacro5_8Macro8Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "bStereoMainCzPmPmPmcMacro5_8Macro8Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmdMacro1_4Macro1Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "bStereoMainCzPmPmPmdMacro1_4Macro1Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmdMacro1_4Macro2Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "bStereoMainCzPmPmPmdMacro1_4Macro2Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmdMacro1_4Macro3Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "bStereoMainCzPmPmPmdMacro1_4Macro3Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmdMacro1_4Macro4Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "bStereoMainCzPmPmPmdMacro1_4Macro4Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmdMacro5_8Macro5Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "bStereoMainCzPmPmPmdMacro5_8Macro5Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmdMacro5_8Macro6Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "bStereoMainCzPmPmPmdMacro5_8Macro6Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmdMacro5_8Macro7Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "bStereoMainCzPmPmPmdMacro5_8Macro7Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoMainCzPmPmPmdMacro5_8Macro8Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "bStereoMainCzPmPmPmdMacro5_8Macro8Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmCzIndexMacro1_4Macro1Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "bStereoL_roffsetCzPmCzIndexMacro1_4Macro1Index",
      0 | kParameterIsAutomable);
    value[ID::bStereoL_roffsetCzPmCzIndexMacro1_4Macro2Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "bStereoL_roffsetCzPmCzIndexMacro1_4Macro2Index",
      0 | kParameterIsAutomable);
    value[ID::bStereoL_roffsetCzPmCzIndexMacro1_4Macro3Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "bStereoL_roffsetCzPmCzIndexMacro1_4Macro3Index",
      0 | kParameterIsAutomable);
    value[ID::bStereoL_roffsetCzPmCzIndexMacro1_4Macro4Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "bStereoL_roffsetCzPmCzIndexMacro1_4Macro4Index",
      0 | kParameterIsAutomable);
    value[ID::bStereoL_roffsetCzPmCzIndexMacro5_8Macro5Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "bStereoL_roffsetCzPmCzIndexMacro5_8Macro5Index",
      0 | kParameterIsAutomable);
    value[ID::bStereoL_roffsetCzPmCzIndexMacro5_8Macro6Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "bStereoL_roffsetCzPmCzIndexMacro5_8Macro6Index",
      0 | kParameterIsAutomable);
    value[ID::bStereoL_roffsetCzPmCzIndexMacro5_8Macro7Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "bStereoL_roffsetCzPmCzIndexMacro5_8Macro7Index",
      0 | kParameterIsAutomable);
    value[ID::bStereoL_roffsetCzPmCzIndexMacro5_8Macro8Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "bStereoL_roffsetCzPmCzIndexMacro5_8Macro8Index",
      0 | kParameterIsAutomable);
    value[ID::bStereoL_roffsetCzPmCzOctaveMacro1_4Macro1Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "bStereoL_roffsetCzPmCzOctaveMacro1_4Macro1Octave",
      0 | kParameterIsAutomable);
    value[ID::bStereoL_roffsetCzPmCzOctaveMacro1_4Macro2Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "bStereoL_roffsetCzPmCzOctaveMacro1_4Macro2Octave",
      0 | kParameterIsAutomable);
    value[ID::bStereoL_roffsetCzPmCzOctaveMacro1_4Macro3Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "bStereoL_roffsetCzPmCzOctaveMacro1_4Macro3Octave",
      0 | kParameterIsAutomable);
    value[ID::bStereoL_roffsetCzPmCzOctaveMacro1_4Macro4Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "bStereoL_roffsetCzPmCzOctaveMacro1_4Macro4Octave",
      0 | kParameterIsAutomable);
    value[ID::bStereoL_roffsetCzPmCzOctaveMacro5_8Macro5Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "bStereoL_roffsetCzPmCzOctaveMacro5_8Macro5Octave",
      0 | kParameterIsAutomable);
    value[ID::bStereoL_roffsetCzPmCzOctaveMacro5_8Macro6Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "bStereoL_roffsetCzPmCzOctaveMacro5_8Macro6Octave",
      0 | kParameterIsAutomable);
    value[ID::bStereoL_roffsetCzPmCzOctaveMacro5_8Macro7Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "bStereoL_roffsetCzPmCzOctaveMacro5_8Macro7Octave",
      0 | kParameterIsAutomable);
    value[ID::bStereoL_roffsetCzPmCzOctaveMacro5_8Macro8Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "bStereoL_roffsetCzPmCzOctaveMacro5_8Macro8Octave",
      0 | kParameterIsAutomable);
    value[ID::bStereoL_roffsetCzPmCzPhaseMacro1_4Macro1Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "bStereoL_roffsetCzPmCzPhaseMacro1_4Macro1Phase",
      0 | kParameterIsAutomable);
    value[ID::bStereoL_roffsetCzPmCzPhaseMacro1_4Macro2Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "bStereoL_roffsetCzPmCzPhaseMacro1_4Macro2Phase",
      0 | kParameterIsAutomable);
    value[ID::bStereoL_roffsetCzPmCzPhaseMacro1_4Macro3Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "bStereoL_roffsetCzPmCzPhaseMacro1_4Macro3Phase",
      0 | kParameterIsAutomable);
    value[ID::bStereoL_roffsetCzPmCzPhaseMacro1_4Macro4Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "bStereoL_roffsetCzPmCzPhaseMacro1_4Macro4Phase",
      0 | kParameterIsAutomable);
    value[ID::bStereoL_roffsetCzPmCzPhaseMacro5_8Macro5Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "bStereoL_roffsetCzPmCzPhaseMacro5_8Macro5Phase",
      0 | kParameterIsAutomable);
    value[ID::bStereoL_roffsetCzPmCzPhaseMacro5_8Macro6Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "bStereoL_roffsetCzPmCzPhaseMacro5_8Macro6Phase",
      0 | kParameterIsAutomable);
    value[ID::bStereoL_roffsetCzPmCzPhaseMacro5_8Macro7Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "bStereoL_roffsetCzPmCzPhaseMacro5_8Macro7Phase",
      0 | kParameterIsAutomable);
    value[ID::bStereoL_roffsetCzPmCzPhaseMacro5_8Macro8Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "bStereoL_roffsetCzPmCzPhaseMacro5_8Macro8Phase",
      0 | kParameterIsAutomable);
    value[ID::bStereoL_roffsetCzPmPmPmaMacro1_4Macro1Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "bStereoL_roffsetCzPmPmPmaMacro1_4Macro1Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmaMacro1_4Macro2Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "bStereoL_roffsetCzPmPmPmaMacro1_4Macro2Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmaMacro1_4Macro3Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "bStereoL_roffsetCzPmPmPmaMacro1_4Macro3Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmaMacro1_4Macro4Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "bStereoL_roffsetCzPmPmPmaMacro1_4Macro4Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmaMacro5_8Macro5Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "bStereoL_roffsetCzPmPmPmaMacro5_8Macro5Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmaMacro5_8Macro6Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "bStereoL_roffsetCzPmPmPmaMacro5_8Macro6Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmaMacro5_8Macro7Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "bStereoL_roffsetCzPmPmPmaMacro5_8Macro7Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmaMacro5_8Macro8Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "bStereoL_roffsetCzPmPmPmaMacro5_8Macro8Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmbMacro1_4Macro1Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "bStereoL_roffsetCzPmPmPmbMacro1_4Macro1Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmbMacro1_4Macro2Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "bStereoL_roffsetCzPmPmPmbMacro1_4Macro2Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmbMacro1_4Macro3Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "bStereoL_roffsetCzPmPmPmbMacro1_4Macro3Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmbMacro1_4Macro4Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "bStereoL_roffsetCzPmPmPmbMacro1_4Macro4Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmbMacro5_8Macro5Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "bStereoL_roffsetCzPmPmPmbMacro5_8Macro5Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmbMacro5_8Macro6Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "bStereoL_roffsetCzPmPmPmbMacro5_8Macro6Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmbMacro5_8Macro7Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "bStereoL_roffsetCzPmPmPmbMacro5_8Macro7Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmbMacro5_8Macro8Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "bStereoL_roffsetCzPmPmPmbMacro5_8Macro8Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmcMacro1_4Macro1Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "bStereoL_roffsetCzPmPmPmcMacro1_4Macro1Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmcMacro1_4Macro2Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "bStereoL_roffsetCzPmPmPmcMacro1_4Macro2Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmcMacro1_4Macro3Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "bStereoL_roffsetCzPmPmPmcMacro1_4Macro3Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmcMacro1_4Macro4Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "bStereoL_roffsetCzPmPmPmcMacro1_4Macro4Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmcMacro5_8Macro5Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "bStereoL_roffsetCzPmPmPmcMacro5_8Macro5Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmcMacro5_8Macro6Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "bStereoL_roffsetCzPmPmPmcMacro5_8Macro6Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmcMacro5_8Macro7Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "bStereoL_roffsetCzPmPmPmcMacro5_8Macro7Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmcMacro5_8Macro8Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "bStereoL_roffsetCzPmPmPmcMacro5_8Macro8Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmdMacro1_4Macro1Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "bStereoL_roffsetCzPmPmPmdMacro1_4Macro1Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmdMacro1_4Macro2Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "bStereoL_roffsetCzPmPmPmdMacro1_4Macro2Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmdMacro1_4Macro3Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "bStereoL_roffsetCzPmPmPmdMacro1_4Macro3Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmdMacro1_4Macro4Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "bStereoL_roffsetCzPmPmPmdMacro1_4Macro4Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmdMacro5_8Macro5Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "bStereoL_roffsetCzPmPmPmdMacro5_8Macro5Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmdMacro5_8Macro6Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "bStereoL_roffsetCzPmPmPmdMacro5_8Macro6Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmdMacro5_8Macro7Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "bStereoL_roffsetCzPmPmPmdMacro5_8Macro7Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bStereoL_roffsetCzPmPmPmdMacro5_8Macro8Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "bStereoL_roffsetCzPmPmPmdMacro5_8Macro8Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::bType] = std::make_unique<IntValue>(
      Scales::type.invmap(2),
      Scales::type,
      "bType",
      0 | kParameterIsAutomable | kParameterIsInteger);
    value[ID::cStereoMainCzPmCzIndexMacro1_4Macro1Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "cStereoMainCzPmCzIndexMacro1_4Macro1Index",
      0 | kParameterIsAutomable);
    value[ID::cStereoMainCzPmCzIndexMacro1_4Macro2Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "cStereoMainCzPmCzIndexMacro1_4Macro2Index",
      0 | kParameterIsAutomable);
    value[ID::cStereoMainCzPmCzIndexMacro1_4Macro3Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "cStereoMainCzPmCzIndexMacro1_4Macro3Index",
      0 | kParameterIsAutomable);
    value[ID::cStereoMainCzPmCzIndexMacro1_4Macro4Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "cStereoMainCzPmCzIndexMacro1_4Macro4Index",
      0 | kParameterIsAutomable);
    value[ID::cStereoMainCzPmCzIndexMacro5_8Macro5Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "cStereoMainCzPmCzIndexMacro5_8Macro5Index",
      0 | kParameterIsAutomable);
    value[ID::cStereoMainCzPmCzIndexMacro5_8Macro6Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "cStereoMainCzPmCzIndexMacro5_8Macro6Index",
      0 | kParameterIsAutomable);
    value[ID::cStereoMainCzPmCzIndexMacro5_8Macro7Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "cStereoMainCzPmCzIndexMacro5_8Macro7Index",
      0 | kParameterIsAutomable);
    value[ID::cStereoMainCzPmCzIndexMacro5_8Macro8Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "cStereoMainCzPmCzIndexMacro5_8Macro8Index",
      0 | kParameterIsAutomable);
    value[ID::cStereoMainCzPmCzOctaveMacro1_4Macro1Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "cStereoMainCzPmCzOctaveMacro1_4Macro1Octave",
      0 | kParameterIsAutomable);
    value[ID::cStereoMainCzPmCzOctaveMacro1_4Macro2Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "cStereoMainCzPmCzOctaveMacro1_4Macro2Octave",
      0 | kParameterIsAutomable);
    value[ID::cStereoMainCzPmCzOctaveMacro1_4Macro3Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "cStereoMainCzPmCzOctaveMacro1_4Macro3Octave",
      0 | kParameterIsAutomable);
    value[ID::cStereoMainCzPmCzOctaveMacro1_4Macro4Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "cStereoMainCzPmCzOctaveMacro1_4Macro4Octave",
      0 | kParameterIsAutomable);
    value[ID::cStereoMainCzPmCzOctaveMacro5_8Macro5Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "cStereoMainCzPmCzOctaveMacro5_8Macro5Octave",
      0 | kParameterIsAutomable);
    value[ID::cStereoMainCzPmCzOctaveMacro5_8Macro6Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "cStereoMainCzPmCzOctaveMacro5_8Macro6Octave",
      0 | kParameterIsAutomable);
    value[ID::cStereoMainCzPmCzOctaveMacro5_8Macro7Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "cStereoMainCzPmCzOctaveMacro5_8Macro7Octave",
      0 | kParameterIsAutomable);
    value[ID::cStereoMainCzPmCzOctaveMacro5_8Macro8Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "cStereoMainCzPmCzOctaveMacro5_8Macro8Octave",
      0 | kParameterIsAutomable);
    value[ID::cStereoMainCzPmCzPhaseMacro1_4Macro1Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "cStereoMainCzPmCzPhaseMacro1_4Macro1Phase",
      0 | kParameterIsAutomable);
    value[ID::cStereoMainCzPmCzPhaseMacro1_4Macro2Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "cStereoMainCzPmCzPhaseMacro1_4Macro2Phase",
      0 | kParameterIsAutomable);
    value[ID::cStereoMainCzPmCzPhaseMacro1_4Macro3Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "cStereoMainCzPmCzPhaseMacro1_4Macro3Phase",
      0 | kParameterIsAutomable);
    value[ID::cStereoMainCzPmCzPhaseMacro1_4Macro4Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "cStereoMainCzPmCzPhaseMacro1_4Macro4Phase",
      0 | kParameterIsAutomable);
    value[ID::cStereoMainCzPmCzPhaseMacro5_8Macro5Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "cStereoMainCzPmCzPhaseMacro5_8Macro5Phase",
      0 | kParameterIsAutomable);
    value[ID::cStereoMainCzPmCzPhaseMacro5_8Macro6Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "cStereoMainCzPmCzPhaseMacro5_8Macro6Phase",
      0 | kParameterIsAutomable);
    value[ID::cStereoMainCzPmCzPhaseMacro5_8Macro7Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "cStereoMainCzPmCzPhaseMacro5_8Macro7Phase",
      0 | kParameterIsAutomable);
    value[ID::cStereoMainCzPmCzPhaseMacro5_8Macro8Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "cStereoMainCzPmCzPhaseMacro5_8Macro8Phase",
      0 | kParameterIsAutomable);
    value[ID::cStereoMainCzPmPmPmaMacro1_4Macro1Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "cStereoMainCzPmPmPmaMacro1_4Macro1Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmaMacro1_4Macro2Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "cStereoMainCzPmPmPmaMacro1_4Macro2Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmaMacro1_4Macro3Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "cStereoMainCzPmPmPmaMacro1_4Macro3Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmaMacro1_4Macro4Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "cStereoMainCzPmPmPmaMacro1_4Macro4Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmaMacro5_8Macro5Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "cStereoMainCzPmPmPmaMacro5_8Macro5Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmaMacro5_8Macro6Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "cStereoMainCzPmPmPmaMacro5_8Macro6Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmaMacro5_8Macro7Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "cStereoMainCzPmPmPmaMacro5_8Macro7Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmaMacro5_8Macro8Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "cStereoMainCzPmPmPmaMacro5_8Macro8Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmbMacro1_4Macro1Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "cStereoMainCzPmPmPmbMacro1_4Macro1Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmbMacro1_4Macro2Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "cStereoMainCzPmPmPmbMacro1_4Macro2Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmbMacro1_4Macro3Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "cStereoMainCzPmPmPmbMacro1_4Macro3Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmbMacro1_4Macro4Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "cStereoMainCzPmPmPmbMacro1_4Macro4Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmbMacro5_8Macro5Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "cStereoMainCzPmPmPmbMacro5_8Macro5Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmbMacro5_8Macro6Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "cStereoMainCzPmPmPmbMacro5_8Macro6Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmbMacro5_8Macro7Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "cStereoMainCzPmPmPmbMacro5_8Macro7Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmbMacro5_8Macro8Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "cStereoMainCzPmPmPmbMacro5_8Macro8Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmcMacro1_4Macro1Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "cStereoMainCzPmPmPmcMacro1_4Macro1Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmcMacro1_4Macro2Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "cStereoMainCzPmPmPmcMacro1_4Macro2Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmcMacro1_4Macro3Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "cStereoMainCzPmPmPmcMacro1_4Macro3Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmcMacro1_4Macro4Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "cStereoMainCzPmPmPmcMacro1_4Macro4Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmcMacro5_8Macro5Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "cStereoMainCzPmPmPmcMacro5_8Macro5Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmcMacro5_8Macro6Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "cStereoMainCzPmPmPmcMacro5_8Macro6Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmcMacro5_8Macro7Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "cStereoMainCzPmPmPmcMacro5_8Macro7Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmcMacro5_8Macro8Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "cStereoMainCzPmPmPmcMacro5_8Macro8Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmdMacro1_4Macro1Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "cStereoMainCzPmPmPmdMacro1_4Macro1Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmdMacro1_4Macro2Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "cStereoMainCzPmPmPmdMacro1_4Macro2Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmdMacro1_4Macro3Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "cStereoMainCzPmPmPmdMacro1_4Macro3Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmdMacro1_4Macro4Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "cStereoMainCzPmPmPmdMacro1_4Macro4Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmdMacro5_8Macro5Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "cStereoMainCzPmPmPmdMacro5_8Macro5Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmdMacro5_8Macro6Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "cStereoMainCzPmPmPmdMacro5_8Macro6Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmdMacro5_8Macro7Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "cStereoMainCzPmPmPmdMacro5_8Macro7Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoMainCzPmPmPmdMacro5_8Macro8Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "cStereoMainCzPmPmPmdMacro5_8Macro8Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmCzIndexMacro1_4Macro1Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "cStereoL_roffsetCzPmCzIndexMacro1_4Macro1Index",
      0 | kParameterIsAutomable);
    value[ID::cStereoL_roffsetCzPmCzIndexMacro1_4Macro2Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "cStereoL_roffsetCzPmCzIndexMacro1_4Macro2Index",
      0 | kParameterIsAutomable);
    value[ID::cStereoL_roffsetCzPmCzIndexMacro1_4Macro3Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "cStereoL_roffsetCzPmCzIndexMacro1_4Macro3Index",
      0 | kParameterIsAutomable);
    value[ID::cStereoL_roffsetCzPmCzIndexMacro1_4Macro4Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "cStereoL_roffsetCzPmCzIndexMacro1_4Macro4Index",
      0 | kParameterIsAutomable);
    value[ID::cStereoL_roffsetCzPmCzIndexMacro5_8Macro5Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "cStereoL_roffsetCzPmCzIndexMacro5_8Macro5Index",
      0 | kParameterIsAutomable);
    value[ID::cStereoL_roffsetCzPmCzIndexMacro5_8Macro6Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "cStereoL_roffsetCzPmCzIndexMacro5_8Macro6Index",
      0 | kParameterIsAutomable);
    value[ID::cStereoL_roffsetCzPmCzIndexMacro5_8Macro7Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "cStereoL_roffsetCzPmCzIndexMacro5_8Macro7Index",
      0 | kParameterIsAutomable);
    value[ID::cStereoL_roffsetCzPmCzIndexMacro5_8Macro8Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "cStereoL_roffsetCzPmCzIndexMacro5_8Macro8Index",
      0 | kParameterIsAutomable);
    value[ID::cStereoL_roffsetCzPmCzOctaveMacro1_4Macro1Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "cStereoL_roffsetCzPmCzOctaveMacro1_4Macro1Octave",
      0 | kParameterIsAutomable);
    value[ID::cStereoL_roffsetCzPmCzOctaveMacro1_4Macro2Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "cStereoL_roffsetCzPmCzOctaveMacro1_4Macro2Octave",
      0 | kParameterIsAutomable);
    value[ID::cStereoL_roffsetCzPmCzOctaveMacro1_4Macro3Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "cStereoL_roffsetCzPmCzOctaveMacro1_4Macro3Octave",
      0 | kParameterIsAutomable);
    value[ID::cStereoL_roffsetCzPmCzOctaveMacro1_4Macro4Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "cStereoL_roffsetCzPmCzOctaveMacro1_4Macro4Octave",
      0 | kParameterIsAutomable);
    value[ID::cStereoL_roffsetCzPmCzOctaveMacro5_8Macro5Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "cStereoL_roffsetCzPmCzOctaveMacro5_8Macro5Octave",
      0 | kParameterIsAutomable);
    value[ID::cStereoL_roffsetCzPmCzOctaveMacro5_8Macro6Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "cStereoL_roffsetCzPmCzOctaveMacro5_8Macro6Octave",
      0 | kParameterIsAutomable);
    value[ID::cStereoL_roffsetCzPmCzOctaveMacro5_8Macro7Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "cStereoL_roffsetCzPmCzOctaveMacro5_8Macro7Octave",
      0 | kParameterIsAutomable);
    value[ID::cStereoL_roffsetCzPmCzOctaveMacro5_8Macro8Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "cStereoL_roffsetCzPmCzOctaveMacro5_8Macro8Octave",
      0 | kParameterIsAutomable);
    value[ID::cStereoL_roffsetCzPmCzPhaseMacro1_4Macro1Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "cStereoL_roffsetCzPmCzPhaseMacro1_4Macro1Phase",
      0 | kParameterIsAutomable);
    value[ID::cStereoL_roffsetCzPmCzPhaseMacro1_4Macro2Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "cStereoL_roffsetCzPmCzPhaseMacro1_4Macro2Phase",
      0 | kParameterIsAutomable);
    value[ID::cStereoL_roffsetCzPmCzPhaseMacro1_4Macro3Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "cStereoL_roffsetCzPmCzPhaseMacro1_4Macro3Phase",
      0 | kParameterIsAutomable);
    value[ID::cStereoL_roffsetCzPmCzPhaseMacro1_4Macro4Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "cStereoL_roffsetCzPmCzPhaseMacro1_4Macro4Phase",
      0 | kParameterIsAutomable);
    value[ID::cStereoL_roffsetCzPmCzPhaseMacro5_8Macro5Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "cStereoL_roffsetCzPmCzPhaseMacro5_8Macro5Phase",
      0 | kParameterIsAutomable);
    value[ID::cStereoL_roffsetCzPmCzPhaseMacro5_8Macro6Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "cStereoL_roffsetCzPmCzPhaseMacro5_8Macro6Phase",
      0 | kParameterIsAutomable);
    value[ID::cStereoL_roffsetCzPmCzPhaseMacro5_8Macro7Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "cStereoL_roffsetCzPmCzPhaseMacro5_8Macro7Phase",
      0 | kParameterIsAutomable);
    value[ID::cStereoL_roffsetCzPmCzPhaseMacro5_8Macro8Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "cStereoL_roffsetCzPmCzPhaseMacro5_8Macro8Phase",
      0 | kParameterIsAutomable);
    value[ID::cStereoL_roffsetCzPmPmPmaMacro1_4Macro1Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "cStereoL_roffsetCzPmPmPmaMacro1_4Macro1Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmaMacro1_4Macro2Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "cStereoL_roffsetCzPmPmPmaMacro1_4Macro2Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmaMacro1_4Macro3Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "cStereoL_roffsetCzPmPmPmaMacro1_4Macro3Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmaMacro1_4Macro4Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "cStereoL_roffsetCzPmPmPmaMacro1_4Macro4Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmaMacro5_8Macro5Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "cStereoL_roffsetCzPmPmPmaMacro5_8Macro5Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmaMacro5_8Macro6Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "cStereoL_roffsetCzPmPmPmaMacro5_8Macro6Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmaMacro5_8Macro7Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "cStereoL_roffsetCzPmPmPmaMacro5_8Macro7Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmaMacro5_8Macro8Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "cStereoL_roffsetCzPmPmPmaMacro5_8Macro8Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmbMacro1_4Macro1Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "cStereoL_roffsetCzPmPmPmbMacro1_4Macro1Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmbMacro1_4Macro2Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "cStereoL_roffsetCzPmPmPmbMacro1_4Macro2Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmbMacro1_4Macro3Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "cStereoL_roffsetCzPmPmPmbMacro1_4Macro3Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmbMacro1_4Macro4Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "cStereoL_roffsetCzPmPmPmbMacro1_4Macro4Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmbMacro5_8Macro5Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "cStereoL_roffsetCzPmPmPmbMacro5_8Macro5Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmbMacro5_8Macro6Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "cStereoL_roffsetCzPmPmPmbMacro5_8Macro6Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmbMacro5_8Macro7Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "cStereoL_roffsetCzPmPmPmbMacro5_8Macro7Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmbMacro5_8Macro8Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "cStereoL_roffsetCzPmPmPmbMacro5_8Macro8Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmcMacro1_4Macro1Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "cStereoL_roffsetCzPmPmPmcMacro1_4Macro1Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmcMacro1_4Macro2Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "cStereoL_roffsetCzPmPmPmcMacro1_4Macro2Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmcMacro1_4Macro3Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "cStereoL_roffsetCzPmPmPmcMacro1_4Macro3Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmcMacro1_4Macro4Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "cStereoL_roffsetCzPmPmPmcMacro1_4Macro4Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmcMacro5_8Macro5Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "cStereoL_roffsetCzPmPmPmcMacro5_8Macro5Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmcMacro5_8Macro6Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "cStereoL_roffsetCzPmPmPmcMacro5_8Macro6Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmcMacro5_8Macro7Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "cStereoL_roffsetCzPmPmPmcMacro5_8Macro7Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmcMacro5_8Macro8Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "cStereoL_roffsetCzPmPmPmcMacro5_8Macro8Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmdMacro1_4Macro1Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "cStereoL_roffsetCzPmPmPmdMacro1_4Macro1Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmdMacro1_4Macro2Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "cStereoL_roffsetCzPmPmPmdMacro1_4Macro2Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmdMacro1_4Macro3Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "cStereoL_roffsetCzPmPmPmdMacro1_4Macro3Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmdMacro1_4Macro4Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "cStereoL_roffsetCzPmPmPmdMacro1_4Macro4Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmdMacro5_8Macro5Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "cStereoL_roffsetCzPmPmPmdMacro5_8Macro5Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmdMacro5_8Macro6Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "cStereoL_roffsetCzPmPmPmdMacro5_8Macro6Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmdMacro5_8Macro7Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "cStereoL_roffsetCzPmPmPmdMacro5_8Macro7Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cStereoL_roffsetCzPmPmPmdMacro5_8Macro8Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "cStereoL_roffsetCzPmPmPmdMacro5_8Macro8Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::cType] = std::make_unique<IntValue>(
      Scales::type.invmap(2),
      Scales::type,
      "cType",
      0 | kParameterIsAutomable | kParameterIsInteger);
    value[ID::dStereoMainCzPmCzIndexMacro1_4Macro1Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "dStereoMainCzPmCzIndexMacro1_4Macro1Index",
      0 | kParameterIsAutomable);
    value[ID::dStereoMainCzPmCzIndexMacro1_4Macro2Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "dStereoMainCzPmCzIndexMacro1_4Macro2Index",
      0 | kParameterIsAutomable);
    value[ID::dStereoMainCzPmCzIndexMacro1_4Macro3Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "dStereoMainCzPmCzIndexMacro1_4Macro3Index",
      0 | kParameterIsAutomable);
    value[ID::dStereoMainCzPmCzIndexMacro1_4Macro4Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "dStereoMainCzPmCzIndexMacro1_4Macro4Index",
      0 | kParameterIsAutomable);
    value[ID::dStereoMainCzPmCzIndexMacro5_8Macro5Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "dStereoMainCzPmCzIndexMacro5_8Macro5Index",
      0 | kParameterIsAutomable);
    value[ID::dStereoMainCzPmCzIndexMacro5_8Macro6Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "dStereoMainCzPmCzIndexMacro5_8Macro6Index",
      0 | kParameterIsAutomable);
    value[ID::dStereoMainCzPmCzIndexMacro5_8Macro7Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "dStereoMainCzPmCzIndexMacro5_8Macro7Index",
      0 | kParameterIsAutomable);
    value[ID::dStereoMainCzPmCzIndexMacro5_8Macro8Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "dStereoMainCzPmCzIndexMacro5_8Macro8Index",
      0 | kParameterIsAutomable);
    value[ID::dStereoMainCzPmCzOctaveMacro1_4Macro1Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "dStereoMainCzPmCzOctaveMacro1_4Macro1Octave",
      0 | kParameterIsAutomable);
    value[ID::dStereoMainCzPmCzOctaveMacro1_4Macro2Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "dStereoMainCzPmCzOctaveMacro1_4Macro2Octave",
      0 | kParameterIsAutomable);
    value[ID::dStereoMainCzPmCzOctaveMacro1_4Macro3Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "dStereoMainCzPmCzOctaveMacro1_4Macro3Octave",
      0 | kParameterIsAutomable);
    value[ID::dStereoMainCzPmCzOctaveMacro1_4Macro4Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "dStereoMainCzPmCzOctaveMacro1_4Macro4Octave",
      0 | kParameterIsAutomable);
    value[ID::dStereoMainCzPmCzOctaveMacro5_8Macro5Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "dStereoMainCzPmCzOctaveMacro5_8Macro5Octave",
      0 | kParameterIsAutomable);
    value[ID::dStereoMainCzPmCzOctaveMacro5_8Macro6Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "dStereoMainCzPmCzOctaveMacro5_8Macro6Octave",
      0 | kParameterIsAutomable);
    value[ID::dStereoMainCzPmCzOctaveMacro5_8Macro7Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "dStereoMainCzPmCzOctaveMacro5_8Macro7Octave",
      0 | kParameterIsAutomable);
    value[ID::dStereoMainCzPmCzOctaveMacro5_8Macro8Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "dStereoMainCzPmCzOctaveMacro5_8Macro8Octave",
      0 | kParameterIsAutomable);
    value[ID::dStereoMainCzPmCzPhaseMacro1_4Macro1Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "dStereoMainCzPmCzPhaseMacro1_4Macro1Phase",
      0 | kParameterIsAutomable);
    value[ID::dStereoMainCzPmCzPhaseMacro1_4Macro2Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "dStereoMainCzPmCzPhaseMacro1_4Macro2Phase",
      0 | kParameterIsAutomable);
    value[ID::dStereoMainCzPmCzPhaseMacro1_4Macro3Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "dStereoMainCzPmCzPhaseMacro1_4Macro3Phase",
      0 | kParameterIsAutomable);
    value[ID::dStereoMainCzPmCzPhaseMacro1_4Macro4Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "dStereoMainCzPmCzPhaseMacro1_4Macro4Phase",
      0 | kParameterIsAutomable);
    value[ID::dStereoMainCzPmCzPhaseMacro5_8Macro5Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "dStereoMainCzPmCzPhaseMacro5_8Macro5Phase",
      0 | kParameterIsAutomable);
    value[ID::dStereoMainCzPmCzPhaseMacro5_8Macro6Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "dStereoMainCzPmCzPhaseMacro5_8Macro6Phase",
      0 | kParameterIsAutomable);
    value[ID::dStereoMainCzPmCzPhaseMacro5_8Macro7Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "dStereoMainCzPmCzPhaseMacro5_8Macro7Phase",
      0 | kParameterIsAutomable);
    value[ID::dStereoMainCzPmCzPhaseMacro5_8Macro8Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "dStereoMainCzPmCzPhaseMacro5_8Macro8Phase",
      0 | kParameterIsAutomable);
    value[ID::dStereoMainCzPmPmPmaMacro1_4Macro1Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "dStereoMainCzPmPmPmaMacro1_4Macro1Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmaMacro1_4Macro2Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "dStereoMainCzPmPmPmaMacro1_4Macro2Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmaMacro1_4Macro3Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "dStereoMainCzPmPmPmaMacro1_4Macro3Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmaMacro1_4Macro4Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "dStereoMainCzPmPmPmaMacro1_4Macro4Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmaMacro5_8Macro5Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "dStereoMainCzPmPmPmaMacro5_8Macro5Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmaMacro5_8Macro6Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "dStereoMainCzPmPmPmaMacro5_8Macro6Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmaMacro5_8Macro7Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "dStereoMainCzPmPmPmaMacro5_8Macro7Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmaMacro5_8Macro8Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "dStereoMainCzPmPmPmaMacro5_8Macro8Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmbMacro1_4Macro1Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "dStereoMainCzPmPmPmbMacro1_4Macro1Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmbMacro1_4Macro2Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "dStereoMainCzPmPmPmbMacro1_4Macro2Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmbMacro1_4Macro3Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "dStereoMainCzPmPmPmbMacro1_4Macro3Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmbMacro1_4Macro4Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "dStereoMainCzPmPmPmbMacro1_4Macro4Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmbMacro5_8Macro5Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "dStereoMainCzPmPmPmbMacro5_8Macro5Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmbMacro5_8Macro6Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "dStereoMainCzPmPmPmbMacro5_8Macro6Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmbMacro5_8Macro7Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "dStereoMainCzPmPmPmbMacro5_8Macro7Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmbMacro5_8Macro8Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "dStereoMainCzPmPmPmbMacro5_8Macro8Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmcMacro1_4Macro1Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "dStereoMainCzPmPmPmcMacro1_4Macro1Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmcMacro1_4Macro2Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "dStereoMainCzPmPmPmcMacro1_4Macro2Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmcMacro1_4Macro3Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "dStereoMainCzPmPmPmcMacro1_4Macro3Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmcMacro1_4Macro4Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "dStereoMainCzPmPmPmcMacro1_4Macro4Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmcMacro5_8Macro5Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "dStereoMainCzPmPmPmcMacro5_8Macro5Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmcMacro5_8Macro6Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "dStereoMainCzPmPmPmcMacro5_8Macro6Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmcMacro5_8Macro7Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "dStereoMainCzPmPmPmcMacro5_8Macro7Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmcMacro5_8Macro8Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "dStereoMainCzPmPmPmcMacro5_8Macro8Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmdMacro1_4Macro1Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "dStereoMainCzPmPmPmdMacro1_4Macro1Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmdMacro1_4Macro2Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "dStereoMainCzPmPmPmdMacro1_4Macro2Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmdMacro1_4Macro3Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "dStereoMainCzPmPmPmdMacro1_4Macro3Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmdMacro1_4Macro4Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "dStereoMainCzPmPmPmdMacro1_4Macro4Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmdMacro5_8Macro5Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "dStereoMainCzPmPmPmdMacro5_8Macro5Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmdMacro5_8Macro6Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "dStereoMainCzPmPmPmdMacro5_8Macro6Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmdMacro5_8Macro7Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "dStereoMainCzPmPmPmdMacro5_8Macro7Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoMainCzPmPmPmdMacro5_8Macro8Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "dStereoMainCzPmPmPmdMacro5_8Macro8Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmCzIndexMacro1_4Macro1Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "dStereoL_roffsetCzPmCzIndexMacro1_4Macro1Index",
      0 | kParameterIsAutomable);
    value[ID::dStereoL_roffsetCzPmCzIndexMacro1_4Macro2Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "dStereoL_roffsetCzPmCzIndexMacro1_4Macro2Index",
      0 | kParameterIsAutomable);
    value[ID::dStereoL_roffsetCzPmCzIndexMacro1_4Macro3Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "dStereoL_roffsetCzPmCzIndexMacro1_4Macro3Index",
      0 | kParameterIsAutomable);
    value[ID::dStereoL_roffsetCzPmCzIndexMacro1_4Macro4Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "dStereoL_roffsetCzPmCzIndexMacro1_4Macro4Index",
      0 | kParameterIsAutomable);
    value[ID::dStereoL_roffsetCzPmCzIndexMacro5_8Macro5Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "dStereoL_roffsetCzPmCzIndexMacro5_8Macro5Index",
      0 | kParameterIsAutomable);
    value[ID::dStereoL_roffsetCzPmCzIndexMacro5_8Macro6Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "dStereoL_roffsetCzPmCzIndexMacro5_8Macro6Index",
      0 | kParameterIsAutomable);
    value[ID::dStereoL_roffsetCzPmCzIndexMacro5_8Macro7Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "dStereoL_roffsetCzPmCzIndexMacro5_8Macro7Index",
      0 | kParameterIsAutomable);
    value[ID::dStereoL_roffsetCzPmCzIndexMacro5_8Macro8Index] = std::make_unique<LinearValue>(
      Scales::index.invmap(0),
      Scales::index,
      "dStereoL_roffsetCzPmCzIndexMacro5_8Macro8Index",
      0 | kParameterIsAutomable);
    value[ID::dStereoL_roffsetCzPmCzOctaveMacro1_4Macro1Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "dStereoL_roffsetCzPmCzOctaveMacro1_4Macro1Octave",
      0 | kParameterIsAutomable);
    value[ID::dStereoL_roffsetCzPmCzOctaveMacro1_4Macro2Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "dStereoL_roffsetCzPmCzOctaveMacro1_4Macro2Octave",
      0 | kParameterIsAutomable);
    value[ID::dStereoL_roffsetCzPmCzOctaveMacro1_4Macro3Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "dStereoL_roffsetCzPmCzOctaveMacro1_4Macro3Octave",
      0 | kParameterIsAutomable);
    value[ID::dStereoL_roffsetCzPmCzOctaveMacro1_4Macro4Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "dStereoL_roffsetCzPmCzOctaveMacro1_4Macro4Octave",
      0 | kParameterIsAutomable);
    value[ID::dStereoL_roffsetCzPmCzOctaveMacro5_8Macro5Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "dStereoL_roffsetCzPmCzOctaveMacro5_8Macro5Octave",
      0 | kParameterIsAutomable);
    value[ID::dStereoL_roffsetCzPmCzOctaveMacro5_8Macro6Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "dStereoL_roffsetCzPmCzOctaveMacro5_8Macro6Octave",
      0 | kParameterIsAutomable);
    value[ID::dStereoL_roffsetCzPmCzOctaveMacro5_8Macro7Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "dStereoL_roffsetCzPmCzOctaveMacro5_8Macro7Octave",
      0 | kParameterIsAutomable);
    value[ID::dStereoL_roffsetCzPmCzOctaveMacro5_8Macro8Octave] = std::make_unique<LinearValue>(
      Scales::octave.invmap(0),
      Scales::octave,
      "dStereoL_roffsetCzPmCzOctaveMacro5_8Macro8Octave",
      0 | kParameterIsAutomable);
    value[ID::dStereoL_roffsetCzPmCzPhaseMacro1_4Macro1Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "dStereoL_roffsetCzPmCzPhaseMacro1_4Macro1Phase",
      0 | kParameterIsAutomable);
    value[ID::dStereoL_roffsetCzPmCzPhaseMacro1_4Macro2Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "dStereoL_roffsetCzPmCzPhaseMacro1_4Macro2Phase",
      0 | kParameterIsAutomable);
    value[ID::dStereoL_roffsetCzPmCzPhaseMacro1_4Macro3Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "dStereoL_roffsetCzPmCzPhaseMacro1_4Macro3Phase",
      0 | kParameterIsAutomable);
    value[ID::dStereoL_roffsetCzPmCzPhaseMacro1_4Macro4Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "dStereoL_roffsetCzPmCzPhaseMacro1_4Macro4Phase",
      0 | kParameterIsAutomable);
    value[ID::dStereoL_roffsetCzPmCzPhaseMacro5_8Macro5Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "dStereoL_roffsetCzPmCzPhaseMacro5_8Macro5Phase",
      0 | kParameterIsAutomable);
    value[ID::dStereoL_roffsetCzPmCzPhaseMacro5_8Macro6Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "dStereoL_roffsetCzPmCzPhaseMacro5_8Macro6Phase",
      0 | kParameterIsAutomable);
    value[ID::dStereoL_roffsetCzPmCzPhaseMacro5_8Macro7Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "dStereoL_roffsetCzPmCzPhaseMacro5_8Macro7Phase",
      0 | kParameterIsAutomable);
    value[ID::dStereoL_roffsetCzPmCzPhaseMacro5_8Macro8Phase] = std::make_unique<LinearValue>(
      Scales::phase.invmap(0),
      Scales::phase,
      "dStereoL_roffsetCzPmCzPhaseMacro5_8Macro8Phase",
      0 | kParameterIsAutomable);
    value[ID::dStereoL_roffsetCzPmPmPmaMacro1_4Macro1Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "dStereoL_roffsetCzPmPmPmaMacro1_4Macro1Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmaMacro1_4Macro2Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "dStereoL_roffsetCzPmPmPmaMacro1_4Macro2Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmaMacro1_4Macro3Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "dStereoL_roffsetCzPmPmPmaMacro1_4Macro3Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmaMacro1_4Macro4Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "dStereoL_roffsetCzPmPmPmaMacro1_4Macro4Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmaMacro5_8Macro5Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "dStereoL_roffsetCzPmPmPmaMacro5_8Macro5Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmaMacro5_8Macro6Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "dStereoL_roffsetCzPmPmPmaMacro5_8Macro6Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmaMacro5_8Macro7Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "dStereoL_roffsetCzPmPmPmaMacro5_8Macro7Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmaMacro5_8Macro8Pma] = std::make_unique<LogValue>(
      Scales::pma.invmap(0),
      Scales::pma,
      "dStereoL_roffsetCzPmPmPmaMacro5_8Macro8Pma",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmbMacro1_4Macro1Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "dStereoL_roffsetCzPmPmPmbMacro1_4Macro1Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmbMacro1_4Macro2Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "dStereoL_roffsetCzPmPmPmbMacro1_4Macro2Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmbMacro1_4Macro3Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "dStereoL_roffsetCzPmPmPmbMacro1_4Macro3Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmbMacro1_4Macro4Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "dStereoL_roffsetCzPmPmPmbMacro1_4Macro4Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmbMacro5_8Macro5Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "dStereoL_roffsetCzPmPmPmbMacro5_8Macro5Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmbMacro5_8Macro6Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "dStereoL_roffsetCzPmPmPmbMacro5_8Macro6Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmbMacro5_8Macro7Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "dStereoL_roffsetCzPmPmPmbMacro5_8Macro7Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmbMacro5_8Macro8Pmb] = std::make_unique<LogValue>(
      Scales::pmb.invmap(0),
      Scales::pmb,
      "dStereoL_roffsetCzPmPmPmbMacro5_8Macro8Pmb",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmcMacro1_4Macro1Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "dStereoL_roffsetCzPmPmPmcMacro1_4Macro1Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmcMacro1_4Macro2Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "dStereoL_roffsetCzPmPmPmcMacro1_4Macro2Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmcMacro1_4Macro3Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "dStereoL_roffsetCzPmPmPmcMacro1_4Macro3Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmcMacro1_4Macro4Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "dStereoL_roffsetCzPmPmPmcMacro1_4Macro4Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmcMacro5_8Macro5Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "dStereoL_roffsetCzPmPmPmcMacro5_8Macro5Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmcMacro5_8Macro6Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "dStereoL_roffsetCzPmPmPmcMacro5_8Macro6Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmcMacro5_8Macro7Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "dStereoL_roffsetCzPmPmPmcMacro5_8Macro7Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmcMacro5_8Macro8Pmc] = std::make_unique<LogValue>(
      Scales::pmc.invmap(0),
      Scales::pmc,
      "dStereoL_roffsetCzPmPmPmcMacro5_8Macro8Pmc",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmdMacro1_4Macro1Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "dStereoL_roffsetCzPmPmPmdMacro1_4Macro1Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmdMacro1_4Macro2Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "dStereoL_roffsetCzPmPmPmdMacro1_4Macro2Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmdMacro1_4Macro3Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "dStereoL_roffsetCzPmPmPmdMacro1_4Macro3Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmdMacro1_4Macro4Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "dStereoL_roffsetCzPmPmPmdMacro1_4Macro4Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmdMacro5_8Macro5Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "dStereoL_roffsetCzPmPmPmdMacro5_8Macro5Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmdMacro5_8Macro6Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "dStereoL_roffsetCzPmPmPmdMacro5_8Macro6Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmdMacro5_8Macro7Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "dStereoL_roffsetCzPmPmPmdMacro5_8Macro7Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dStereoL_roffsetCzPmPmPmdMacro5_8Macro8Pmd] = std::make_unique<LogValue>(
      Scales::pmd.invmap(0),
      Scales::pmd,
      "dStereoL_roffsetCzPmPmPmdMacro5_8Macro8Pmd",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::dType] = std::make_unique<IntValue>(
      Scales::type.invmap(2),
      Scales::type,
      "dType",
      0 | kParameterIsAutomable | kParameterIsInteger);
    value[ID::envelopesEnvelope_1Attack] = std::make_unique<LogValue>(
      Scales::attack.invmap(0.01),
      Scales::attack,
      "envelopesEnvelope_1Attack",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::envelopesEnvelope_1Decay] = std::make_unique<LogValue>(
      Scales::decay.invmap(0.1),
      Scales::decay,
      "envelopesEnvelope_1Decay",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::envelopesEnvelope_1Sustain] = std::make_unique<LinearValue>(
      Scales::sustain.invmap(0.75),
      Scales::sustain,
      "envelopesEnvelope_1Sustain",
      0 | kParameterIsAutomable);
    value[ID::envelopesEnvelope_1Release] = std::make_unique<LogValue>(
      Scales::release.invmap(0.1),
      Scales::release,
      "envelopesEnvelope_1Release",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::envelopesEnvelope_1Velsens] = std::make_unique<LinearValue>(
      Scales::velsens.invmap(0),
      Scales::velsens,
      "envelopesEnvelope_1Velsens",
      0 | kParameterIsAutomable);
    value[ID::envelopesEnvelope_1Envelope_1] = std::make_unique<LinearValue>(
      Scales::envelope_1.invmap(0),
      Scales::envelope_1,
      "envelopesEnvelope_1Envelope_1",
      0);
    value[ID::envelopesEnvelope0Attack] = std::make_unique<LogValue>(
      Scales::attack.invmap(0.01),
      Scales::attack,
      "envelopesEnvelope0Attack",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::envelopesEnvelope0Decay] = std::make_unique<LogValue>(
      Scales::decay.invmap(0.1),
      Scales::decay,
      "envelopesEnvelope0Decay",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::envelopesEnvelope0Sustain] = std::make_unique<LinearValue>(
      Scales::sustain.invmap(0.75),
      Scales::sustain,
      "envelopesEnvelope0Sustain",
      0 | kParameterIsAutomable);
    value[ID::envelopesEnvelope0Release] = std::make_unique<LogValue>(
      Scales::release.invmap(0.1),
      Scales::release,
      "envelopesEnvelope0Release",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::envelopesEnvelope0Velsens] = std::make_unique<LinearValue>(
      Scales::velsens.invmap(0),
      Scales::velsens,
      "envelopesEnvelope0Velsens",
      0 | kParameterIsAutomable);
    value[ID::envelopesEnvelope0Envelope0] = std::make_unique<LinearValue>(
      Scales::envelope0.invmap(0),
      Scales::envelope0,
      "envelopesEnvelope0Envelope0",
      0);
    value[ID::envelopesEnvelope1Attack] = std::make_unique<LogValue>(
      Scales::attack.invmap(0.01),
      Scales::attack,
      "envelopesEnvelope1Attack",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::envelopesEnvelope1Decay] = std::make_unique<LogValue>(
      Scales::decay.invmap(0.1),
      Scales::decay,
      "envelopesEnvelope1Decay",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::envelopesEnvelope1Sustain] = std::make_unique<LinearValue>(
      Scales::sustain.invmap(0.75),
      Scales::sustain,
      "envelopesEnvelope1Sustain",
      0 | kParameterIsAutomable);
    value[ID::envelopesEnvelope1Release] = std::make_unique<LogValue>(
      Scales::release.invmap(0.1),
      Scales::release,
      "envelopesEnvelope1Release",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::envelopesEnvelope1Velsens] = std::make_unique<LinearValue>(
      Scales::velsens.invmap(0),
      Scales::velsens,
      "envelopesEnvelope1Velsens",
      0 | kParameterIsAutomable);
    value[ID::envelopesEnvelope1Envelope1] = std::make_unique<LinearValue>(
      Scales::envelope1.invmap(0),
      Scales::envelope1,
      "envelopesEnvelope1Envelope1",
      0);
    value[ID::envelopesEnvelope2Attack] = std::make_unique<LogValue>(
      Scales::attack.invmap(0.01),
      Scales::attack,
      "envelopesEnvelope2Attack",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::envelopesEnvelope2Decay] = std::make_unique<LogValue>(
      Scales::decay.invmap(0.1),
      Scales::decay,
      "envelopesEnvelope2Decay",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::envelopesEnvelope2Sustain] = std::make_unique<LinearValue>(
      Scales::sustain.invmap(0.75),
      Scales::sustain,
      "envelopesEnvelope2Sustain",
      0 | kParameterIsAutomable);
    value[ID::envelopesEnvelope2Release] = std::make_unique<LogValue>(
      Scales::release.invmap(0.1),
      Scales::release,
      "envelopesEnvelope2Release",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::envelopesEnvelope2Velsens] = std::make_unique<LinearValue>(
      Scales::velsens.invmap(0),
      Scales::velsens,
      "envelopesEnvelope2Velsens",
      0 | kParameterIsAutomable);
    value[ID::envelopesEnvelope2Envelope2] = std::make_unique<LinearValue>(
      Scales::envelope2.invmap(0),
      Scales::envelope2,
      "envelopesEnvelope2Envelope2",
      0);
    value[ID::envelopesEnvelope3Attack] = std::make_unique<LogValue>(
      Scales::attack.invmap(0.01),
      Scales::attack,
      "envelopesEnvelope3Attack",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::envelopesEnvelope3Decay] = std::make_unique<LogValue>(
      Scales::decay.invmap(0.1),
      Scales::decay,
      "envelopesEnvelope3Decay",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::envelopesEnvelope3Sustain] = std::make_unique<LinearValue>(
      Scales::sustain.invmap(0.75),
      Scales::sustain,
      "envelopesEnvelope3Sustain",
      0 | kParameterIsAutomable);
    value[ID::envelopesEnvelope3Release] = std::make_unique<LogValue>(
      Scales::release.invmap(0.1),
      Scales::release,
      "envelopesEnvelope3Release",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::envelopesEnvelope3Velsens] = std::make_unique<LinearValue>(
      Scales::velsens.invmap(0),
      Scales::velsens,
      "envelopesEnvelope3Velsens",
      0 | kParameterIsAutomable);
    value[ID::envelopesEnvelope3Envelope3] = std::make_unique<LinearValue>(
      Scales::envelope3.invmap(0),
      Scales::envelope3,
      "envelopesEnvelope3Envelope3",
      0);
    value[ID::lfosLfo0Lfofreq] = std::make_unique<LogValue>(
      Scales::lfofreq.invmap(1),
      Scales::lfofreq,
      "lfosLfo0Lfofreq",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::lfosLfo0Lfo0] = std::make_unique<LinearValue>(
      Scales::lfo0.invmap(0),
      Scales::lfo0,
      "lfosLfo0Lfo0",
      0);
    value[ID::lfosLfo1Lfofreq] = std::make_unique<LogValue>(
      Scales::lfofreq.invmap(1),
      Scales::lfofreq,
      "lfosLfo1Lfofreq",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::lfosLfo1Lfo1] = std::make_unique<LinearValue>(
      Scales::lfo1.invmap(0),
      Scales::lfo1,
      "lfosLfo1Lfo1",
      0);
    value[ID::lfosLfo2Lfofreq] = std::make_unique<LogValue>(
      Scales::lfofreq.invmap(1),
      Scales::lfofreq,
      "lfosLfo2Lfofreq",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::lfosLfo2Lfo2] = std::make_unique<LinearValue>(
      Scales::lfo2.invmap(0),
      Scales::lfo2,
      "lfosLfo2Lfo2",
      0);
    value[ID::lfosLfo3Lfofreq] = std::make_unique<LogValue>(
      Scales::lfofreq.invmap(1),
      Scales::lfofreq,
      "lfosLfo3Lfofreq",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::lfosLfo3Lfo3] = std::make_unique<LinearValue>(
      Scales::lfo3.invmap(0),
      Scales::lfo3,
      "lfosLfo3Lfo3",
      0);
    value[ID::modulation1Macro] = std::make_unique<LinearValue>(
      Scales::macro.invmap(0),
      Scales::macro,
      "modulation1Macro",
      0 | kParameterIsAutomable);
    value[ID::modulation1Uptime] = std::make_unique<LinearValue>(
      Scales::uptime.invmap(0.1),
      Scales::uptime,
      "modulation1Uptime",
      0 | kParameterIsAutomable);
    value[ID::modulation1Downtime] = std::make_unique<LinearValue>(
      Scales::downtime.invmap(0.1),
      Scales::downtime,
      "modulation1Downtime",
      0 | kParameterIsAutomable);
    value[ID::modulation1Env0] = std::make_unique<LinearValue>(
      Scales::env.invmap(0),
      Scales::env,
      "modulation1Env0",
      0);
    value[ID::modulation1Env1] = std::make_unique<LinearValue>(
      Scales::env.invmap(0),
      Scales::env,
      "modulation1Env1",
      0);
    value[ID::modulation1Env2] = std::make_unique<LinearValue>(
      Scales::env.invmap(0),
      Scales::env,
      "modulation1Env2",
      0);
    value[ID::modulation1Env3] = std::make_unique<LinearValue>(
      Scales::env.invmap(0),
      Scales::env,
      "modulation1Env3",
      0);
    value[ID::modulation1Lfo0] = std::make_unique<LinearValue>(
      Scales::lfo.invmap(0),
      Scales::lfo,
      "modulation1Lfo0",
      0);
    value[ID::modulation1Lfo1] = std::make_unique<LinearValue>(
      Scales::lfo.invmap(0),
      Scales::lfo,
      "modulation1Lfo1",
      0);
    value[ID::modulation1Lfo2] = std::make_unique<LinearValue>(
      Scales::lfo.invmap(0),
      Scales::lfo,
      "modulation1Lfo2",
      0);
    value[ID::modulation1Lfo3] = std::make_unique<LinearValue>(
      Scales::lfo.invmap(0),
      Scales::lfo,
      "modulation1Lfo3",
      0);
    value[ID::modulation1After_touch] = std::make_unique<LinearValue>(
      Scales::after_touch.invmap(0),
      Scales::after_touch,
      "modulation1After_touch",
      0 | kParameterIsAutomable);
    value[ID::modulation1Note] = std::make_unique<LinearValue>(
      Scales::note.invmap(0),
      Scales::note,
      "modulation1Note",
      0 | kParameterIsAutomable);
    value[ID::modulation1Velocity] = std::make_unique<LinearValue>(
      Scales::velocity.invmap(0),
      Scales::velocity,
      "modulation1Velocity",
      0 | kParameterIsAutomable);
    value[ID::modulation1Mod_wheel] = std::make_unique<LinearValue>(
      Scales::mod_wheel.invmap(0),
      Scales::mod_wheel,
      "modulation1Mod_wheel",
      0 | kParameterIsAutomable);
    value[ID::modulation1Pitch_wheel] = std::make_unique<LinearValue>(
      Scales::pitch_wheel.invmap(0),
      Scales::pitch_wheel,
      "modulation1Pitch_wheel",
      0 | kParameterIsAutomable);
    value[ID::modulation1Random] = std::make_unique<LinearValue>(
      Scales::random.invmap(0),
      Scales::random,
      "modulation1Random",
      0 | kParameterIsAutomable);
    value[ID::modulation1Mix] = std::make_unique<LinearValue>(
      Scales::mix.invmap(0),
      Scales::mix,
      "modulation1Mix",
      0);
    value[ID::modulation2Macro] = std::make_unique<LinearValue>(
      Scales::macro.invmap(0),
      Scales::macro,
      "modulation2Macro",
      0 | kParameterIsAutomable);
    value[ID::modulation2Uptime] = std::make_unique<LinearValue>(
      Scales::uptime.invmap(0.1),
      Scales::uptime,
      "modulation2Uptime",
      0 | kParameterIsAutomable);
    value[ID::modulation2Downtime] = std::make_unique<LinearValue>(
      Scales::downtime.invmap(0.1),
      Scales::downtime,
      "modulation2Downtime",
      0 | kParameterIsAutomable);
    value[ID::modulation2Env0] = std::make_unique<LinearValue>(
      Scales::env.invmap(0),
      Scales::env,
      "modulation2Env0",
      0);
    value[ID::modulation2Env1] = std::make_unique<LinearValue>(
      Scales::env.invmap(0),
      Scales::env,
      "modulation2Env1",
      0);
    value[ID::modulation2Env2] = std::make_unique<LinearValue>(
      Scales::env.invmap(0),
      Scales::env,
      "modulation2Env2",
      0);
    value[ID::modulation2Env3] = std::make_unique<LinearValue>(
      Scales::env.invmap(0),
      Scales::env,
      "modulation2Env3",
      0);
    value[ID::modulation2Lfo0] = std::make_unique<LinearValue>(
      Scales::lfo.invmap(0),
      Scales::lfo,
      "modulation2Lfo0",
      0);
    value[ID::modulation2Lfo1] = std::make_unique<LinearValue>(
      Scales::lfo.invmap(0),
      Scales::lfo,
      "modulation2Lfo1",
      0);
    value[ID::modulation2Lfo2] = std::make_unique<LinearValue>(
      Scales::lfo.invmap(0),
      Scales::lfo,
      "modulation2Lfo2",
      0);
    value[ID::modulation2Lfo3] = std::make_unique<LinearValue>(
      Scales::lfo.invmap(0),
      Scales::lfo,
      "modulation2Lfo3",
      0);
    value[ID::modulation2After_touch] = std::make_unique<LinearValue>(
      Scales::after_touch.invmap(0),
      Scales::after_touch,
      "modulation2After_touch",
      0 | kParameterIsAutomable);
    value[ID::modulation2Note] = std::make_unique<LinearValue>(
      Scales::note.invmap(0),
      Scales::note,
      "modulation2Note",
      0 | kParameterIsAutomable);
    value[ID::modulation2Velocity] = std::make_unique<LinearValue>(
      Scales::velocity.invmap(0),
      Scales::velocity,
      "modulation2Velocity",
      0 | kParameterIsAutomable);
    value[ID::modulation2Mod_wheel] = std::make_unique<LinearValue>(
      Scales::mod_wheel.invmap(0),
      Scales::mod_wheel,
      "modulation2Mod_wheel",
      0 | kParameterIsAutomable);
    value[ID::modulation2Pitch_wheel] = std::make_unique<LinearValue>(
      Scales::pitch_wheel.invmap(0),
      Scales::pitch_wheel,
      "modulation2Pitch_wheel",
      0 | kParameterIsAutomable);
    value[ID::modulation2Random] = std::make_unique<LinearValue>(
      Scales::random.invmap(0),
      Scales::random,
      "modulation2Random",
      0 | kParameterIsAutomable);
    value[ID::modulation2Mix] = std::make_unique<LinearValue>(
      Scales::mix.invmap(0),
      Scales::mix,
      "modulation2Mix",
      0);
    value[ID::modulation3Macro] = std::make_unique<LinearValue>(
      Scales::macro.invmap(0),
      Scales::macro,
      "modulation3Macro",
      0 | kParameterIsAutomable);
    value[ID::modulation3Uptime] = std::make_unique<LinearValue>(
      Scales::uptime.invmap(0.1),
      Scales::uptime,
      "modulation3Uptime",
      0 | kParameterIsAutomable);
    value[ID::modulation3Downtime] = std::make_unique<LinearValue>(
      Scales::downtime.invmap(0.1),
      Scales::downtime,
      "modulation3Downtime",
      0 | kParameterIsAutomable);
    value[ID::modulation3Env0] = std::make_unique<LinearValue>(
      Scales::env.invmap(0),
      Scales::env,
      "modulation3Env0",
      0);
    value[ID::modulation3Env1] = std::make_unique<LinearValue>(
      Scales::env.invmap(0),
      Scales::env,
      "modulation3Env1",
      0);
    value[ID::modulation3Env2] = std::make_unique<LinearValue>(
      Scales::env.invmap(0),
      Scales::env,
      "modulation3Env2",
      0);
    value[ID::modulation3Env3] = std::make_unique<LinearValue>(
      Scales::env.invmap(0),
      Scales::env,
      "modulation3Env3",
      0);
    value[ID::modulation3Lfo0] = std::make_unique<LinearValue>(
      Scales::lfo.invmap(0),
      Scales::lfo,
      "modulation3Lfo0",
      0);
    value[ID::modulation3Lfo1] = std::make_unique<LinearValue>(
      Scales::lfo.invmap(0),
      Scales::lfo,
      "modulation3Lfo1",
      0);
    value[ID::modulation3Lfo2] = std::make_unique<LinearValue>(
      Scales::lfo.invmap(0),
      Scales::lfo,
      "modulation3Lfo2",
      0);
    value[ID::modulation3Lfo3] = std::make_unique<LinearValue>(
      Scales::lfo.invmap(0),
      Scales::lfo,
      "modulation3Lfo3",
      0);
    value[ID::modulation3After_touch] = std::make_unique<LinearValue>(
      Scales::after_touch.invmap(0),
      Scales::after_touch,
      "modulation3After_touch",
      0 | kParameterIsAutomable);
    value[ID::modulation3Note] = std::make_unique<LinearValue>(
      Scales::note.invmap(0),
      Scales::note,
      "modulation3Note",
      0 | kParameterIsAutomable);
    value[ID::modulation3Velocity] = std::make_unique<LinearValue>(
      Scales::velocity.invmap(0),
      Scales::velocity,
      "modulation3Velocity",
      0 | kParameterIsAutomable);
    value[ID::modulation3Mod_wheel] = std::make_unique<LinearValue>(
      Scales::mod_wheel.invmap(0),
      Scales::mod_wheel,
      "modulation3Mod_wheel",
      0 | kParameterIsAutomable);
    value[ID::modulation3Pitch_wheel] = std::make_unique<LinearValue>(
      Scales::pitch_wheel.invmap(0),
      Scales::pitch_wheel,
      "modulation3Pitch_wheel",
      0 | kParameterIsAutomable);
    value[ID::modulation3Random] = std::make_unique<LinearValue>(
      Scales::random.invmap(0),
      Scales::random,
      "modulation3Random",
      0 | kParameterIsAutomable);
    value[ID::modulation3Mix] = std::make_unique<LinearValue>(
      Scales::mix.invmap(0),
      Scales::mix,
      "modulation3Mix",
      0);
    value[ID::midiChannelaftertouch] = std::make_unique<IntValue>(
      Scales::channelaftertouch.invmap(0),
      Scales::channelaftertouch,
      "midiChannelaftertouch",
      0 | kParameterIsAutomable | kParameterIsInteger);
    value[ID::midiModwheel] = std::make_unique<IntValue>(
      Scales::modwheel.invmap(0),
      Scales::modwheel,
      "midiModwheel",
      0 | kParameterIsAutomable | kParameterIsInteger);
    value[ID::midiPitchwheelvaluein] = std::make_unique<IntValue>(
      Scales::pitchwheelvaluein.invmap(0),
      Scales::pitchwheelvaluein,
      "midiPitchwheelvaluein",
      0 | kParameterIsAutomable | kParameterIsInteger);
    value[ID::midiFreq] = std::make_unique<LogValue>(
      Scales::freq.invmap(440),
      Scales::freq,
      "midiFreq",
      0 | kParameterIsAutomable | kParameterIsLogarithmic);
    value[ID::midiGain] = std::make_unique<LinearValue>(
      Scales::gain.invmap(0.5),
      Scales::gain,
      "midiGain",
      0 | kParameterIsAutomable);
    value[ID::midiGate] = std::make_unique<LinearValue>(
      Scales::gate.invmap(0),
      Scales::gate,
      "midiGate",
      0 | kParameterIsAutomable);
    
  }

#ifndef TEST_BUILD
  void initParameter(uint32_t index, Parameter &parameter)
  {
    if (index >= value.size()) return;
    value[index]->setParameterRange(parameter);
  }
#endif

  size_t idLength() override { return value.size(); }

  void resetParameter()
  {
    for (auto &val : value) val->setFromNormalized(val->getDefaultNormalized());
  }

  double getNormalized(uint32_t index) const override
  {
    if (index >= value.size()) return 0.0;
    return value[index]->getNormalized();
  }

  double getDefaultNormalized(uint32_t index) const override
  {
    if (index >= value.size()) return 0.0;
    return value[index]->getDefaultNormalized();
  }

  double getFloat(uint32_t index) const override
  {
    if (index >= value.size()) return 0.0;
    return value[index]->getFloat();
  }

  double getInt(uint32_t index) const override
  {
    if (index >= value.size()) return 0.0;
    return value[index]->getInt();
  }

  void setParameterValue(uint32_t index, float raw)
  {
    if (index >= value.size()) return;
    value[index]->setFromFloat(raw);
  }

  double parameterChanged(uint32_t index, float raw) override
  {
    if (index >= value.size()) return 0.0;
    value[index]->setFromFloat(raw);
    return value[index]->getNormalized();
  }

  double updateValue(uint32_t index, float normalized) override
  {
    if (index >= value.size()) return 0.0;
    value[index]->setFromNormalized(normalized);
    return value[index]->getFloat();
  }

  enum Preset {
    presetDefault,

    Preset_ENUM_LENGTH,
  };

  std::array<const char *, 31> programName{
    "Default",
  };

#ifndef TEST_BUILD
  void initProgramName(uint32_t index, String &programName)
  {
    programName = this->programName[index];
  }

  void loadProgram(uint32_t index) override;
#endif

  void validate()
  {
    for (size_t i = 0; i < value.size(); ++i) {
      if (value[i] == nullptr) {
        std::cout << "PluginError: GlobalParameter::value[" << std::to_string(i)
                  << "] is nullptr. Forgetting initialization?\n";
        std::exit(EXIT_FAILURE);
      }
    }
  }
};